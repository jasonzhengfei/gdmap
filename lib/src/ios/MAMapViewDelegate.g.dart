// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:amap_map_fluttify/src/ios/ios.export.g.dart';
import 'package:amap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

mixin MAMapViewDelegate on NSObject {
  

  

  

  @mustCallSuper
  Future<void> mapViewRegionChanged(MAMapView mapView) {
    kNativeObjectPool.add(mapView);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapViewRegionChanged::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_regionWillChangeAnimated(MAMapView mapView, bool animated) {
    kNativeObjectPool.add(mapView);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_regionWillChangeAnimated::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_regionDidChangeAnimated(MAMapView mapView, bool animated) {
    kNativeObjectPool.add(mapView);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_regionDidChangeAnimated::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_mapWillMoveByUser(MAMapView mapView, bool wasUserAction) {
    kNativeObjectPool.add(mapView);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_mapWillMoveByUser::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_mapDidMoveByUser(MAMapView mapView, bool wasUserAction) {
    kNativeObjectPool.add(mapView);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_mapDidMoveByUser::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_mapWillZoomByUser(MAMapView mapView, bool wasUserAction) {
    kNativeObjectPool.add(mapView);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_mapWillZoomByUser::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_mapDidZoomByUser(MAMapView mapView, bool wasUserAction) {
    kNativeObjectPool.add(mapView);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_mapDidZoomByUser::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapViewWillStartLoadingMap(MAMapView mapView) {
    kNativeObjectPool.add(mapView);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapViewWillStartLoadingMap::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapViewDidFinishLoadingMap(MAMapView mapView) {
    kNativeObjectPool.add(mapView);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapViewDidFinishLoadingMap::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapViewDidFailLoadingMap_withError(MAMapView mapView, NSError error) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.add(error);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapViewDidFailLoadingMap_withError::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<MAAnnotationView> mapView_viewForAnnotation(MAMapView mapView, MAAnnotation annotation) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.add(annotation);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_viewForAnnotation::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_didAddAnnotationViews(MAMapView mapView, List<NSObject> views) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.addAll(views);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_didAddAnnotationViews::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_didSelectAnnotationView(MAMapView mapView, MAAnnotationView view) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.add(view);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_didSelectAnnotationView::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_didDeselectAnnotationView(MAMapView mapView, MAAnnotationView view) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.add(view);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_didDeselectAnnotationView::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapViewWillStartLocatingUser(MAMapView mapView) {
    kNativeObjectPool.add(mapView);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapViewWillStartLocatingUser::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapViewDidStopLocatingUser(MAMapView mapView) {
    kNativeObjectPool.add(mapView);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapViewDidStopLocatingUser::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_didUpdateUserLocation_updatingLocation(MAMapView mapView, MAUserLocation userLocation, bool updatingLocation) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.add(userLocation);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_didUpdateUserLocation_updatingLocation::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapViewRequireLocationAuth(CLLocationManager locationManager) {
    kNativeObjectPool.add(locationManager);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapViewRequireLocationAuth::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_didFailToLocateUserWithError(MAMapView mapView, NSError error) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.add(error);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_didFailToLocateUserWithError::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_annotationView_didChangeDragState_fromOldState(MAMapView mapView, MAAnnotationView view, MAAnnotationViewDragState newState, MAAnnotationViewDragState oldState) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.add(view);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_annotationView_didChangeDragState_fromOldState::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<MAOverlayRenderer> mapView_rendererForOverlay(MAMapView mapView, MAOverlay overlay) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.add(overlay);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_rendererForOverlay::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_didAddOverlayRenderers(MAMapView mapView, List<NSObject> overlayRenderers) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.addAll(overlayRenderers);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_didAddOverlayRenderers::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_annotationView_calloutAccessoryControlTapped(MAMapView mapView, MAAnnotationView view, UIControl control) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.add(view);
    kNativeObjectPool.add(control);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_annotationView_calloutAccessoryControlTapped::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_didAnnotationViewCalloutTapped(MAMapView mapView, MAAnnotationView view) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.add(view);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_didAnnotationViewCalloutTapped::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_didAnnotationViewTapped(MAMapView mapView, MAAnnotationView view) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.add(view);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_didAnnotationViewTapped::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_didChangeUserTrackingMode_animated(MAMapView mapView, MAUserTrackingMode mode, bool animated) {
    kNativeObjectPool.add(mapView);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_didChangeUserTrackingMode_animated::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_didChangeOpenGLESDisabled(MAMapView mapView, bool openGLESDisabled) {
    kNativeObjectPool.add(mapView);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_didChangeOpenGLESDisabled::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_didTouchPois(MAMapView mapView, List<NSObject> pois) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.addAll(pois);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_didTouchPois::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_didSingleTappedAtCoordinate(MAMapView mapView, CLLocationCoordinate2D coordinate) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.add(coordinate);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_didSingleTappedAtCoordinate::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_didLongPressedAtCoordinate(MAMapView mapView, CLLocationCoordinate2D coordinate) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.add(coordinate);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_didLongPressedAtCoordinate::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapInitComplete(MAMapView mapView) {
    kNativeObjectPool.add(mapView);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapInitComplete::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_didIndoorMapShowed(MAMapView mapView, MAIndoorInfo indoorInfo) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.add(indoorInfo);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_didIndoorMapShowed::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_didIndoorMapFloorIndexChanged(MAMapView mapView, MAIndoorInfo indoorInfo) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.add(indoorInfo);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_didIndoorMapFloorIndexChanged::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> mapView_didIndoorMapHidden(MAMapView mapView, MAIndoorInfo indoorInfo) {
    kNativeObjectPool.add(mapView);
    kNativeObjectPool.add(indoorInfo);
  
    if (fluttifyLogEnabled) {
      debugPrint('mapView_didIndoorMapHidden::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> offlineDataWillReload(MAMapView mapView) {
    kNativeObjectPool.add(mapView);
  
    if (fluttifyLogEnabled) {
      debugPrint('offlineDataWillReload::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> offlineDataDidReload(MAMapView mapView) {
    kNativeObjectPool.add(mapView);
  
    if (fluttifyLogEnabled) {
      debugPrint('offlineDataDidReload::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
}