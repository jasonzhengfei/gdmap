// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:io';

import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';
import 'package:amap_map_fluttify/src/android/android.export.g.dart';
import 'package:amap_map_fluttify/src/ios/ios.export.g.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
extension TypeOpAmapMapFluttifyAndroid on Ref {
  Future<bool> iscom_autonavi_ae_gmap_maploader_Pools() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_maploader_Pools', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_maploader_ProcessingTile() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_maploader_ProcessingTile', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_GLMapEngine() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_GLMapEngine', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_AbstractMapMessage() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_AbstractMapMessage', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_glinterface_MapLabelItem() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glinterface_MapLabelItem', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_glanimation_AdglMapAnimationMgr() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AdglMapAnimationMgr', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_glanimation_AdglAnimation2V() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AdglAnimation2V', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_glanimation_AdglAnimationContantValues() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AdglAnimationContantValues', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_glanimation_AdglMapAnimFling() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AdglMapAnimFling', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_glanimation_AbstractAdglAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AbstractAdglAnimation', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_glanimation_AdglAnimation1V() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AdglAnimation1V', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_glanimation_AdglMapAnimPivotZoom() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AdglMapAnimPivotZoom', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam1V() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam1V', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_glanimation_AdglMapAnimGroup() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AdglMapAnimGroup', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam2V() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam2V', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_style_StyleItem() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_style_StyleItem', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_style_StyleElement() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_style_StyleElement', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_GLMapEngine_MapViewInitParam() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_GLMapEngine_MapViewInitParam', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_gesture_EAMapPlatformGestureInfo() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gesture_EAMapPlatformGestureInfo', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_GLMapState() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_GLMapState', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_gloverlay_BaseRouteOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gloverlay_BaseRouteOverlay', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_gloverlay_GLTextureProperty() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gloverlay_GLTextureProperty', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_gloverlay_GLCrossVector() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gloverlay_GLCrossVector', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_gloverlay_GLOverlayBundle_GLAmapFocusHits() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gloverlay_GLOverlayBundle_GLAmapFocusHits', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_gloverlay_GLCrossVector_AVectorCrossAttr() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gloverlay_GLCrossVector_AVectorCrossAttr', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_gloverlay_CrossVectorOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gloverlay_CrossVectorOverlay', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_gloverlay_GLOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gloverlay_GLOverlay', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_gloverlay_GLRouteProperty() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gloverlay_GLRouteProperty', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_gloverlay_GLOverlayTexture() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_gloverlay_GLOverlayTexture', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_ae_gmap_GLMapEngine_InitParam() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_ae_gmap_GLMapEngine_InitParam', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_maploader_AMapLoader_ADataRequestParam() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_maploader_AMapLoader_ADataRequestParam', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_maploader_NetworkState() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_maploader_NetworkState', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_maploader_AMapLoader_AMapGridDownloadRequest() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_maploader_AMapLoader_AMapGridDownloadRequest', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_maploader_AMapLoader() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_maploader_AMapLoader', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_MapProjection() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_MapProjection', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_tools_TextTextureGenerator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_tools_TextTextureGenerator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_tools_GLFileUtil() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_tools_GLFileUtil', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_tools_GlMapUtil() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_tools_GlMapUtil', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_tools_GLMapStaticValue() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_tools_GLMapStaticValue', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_tools_GLConvertUtil() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_tools_GLConvertUtil', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_MsgProcessor() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_MsgProcessor', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_AeUtil_UnZipFileBrake() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AeUtil_UnZipFileBrake', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_AbstractNativeInstance() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AbstractNativeInstance', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_LinkInfo() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_LinkInfo', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_AMapNativePolyline() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AMapNativePolyline', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_IPoint() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_IPoint', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_gles_AMapNativeGLShaderManager() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_gles_AMapNativeGLShaderManager', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_DPoint() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_DPoint', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_AMapNativeRenderer() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AMapNativeRenderer', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_FileUtil() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_FileUtil', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_animation_GLTranslateAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_animation_GLTranslateAnimation', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_animation_GLRotateAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_animation_GLRotateAnimation', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_animation_GLAlphaAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_animation_GLAlphaAnimation', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_animation_GLScaleAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_animation_GLScaleAnimation', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_animation_GLTransformation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_animation_GLTransformation', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_animation_GLAnimationSet() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_animation_GLAnimationSet', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_animation_GLEmergeAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_animation_GLEmergeAnimation', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_animation_GLAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_animation_GLAnimation', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_MapConfig() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_MapConfig', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_message_HoverGestureMapMessage() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_message_HoverGestureMapMessage', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_message_MoveGestureMapMessage() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_message_MoveGestureMapMessage', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_message_ScaleGestureMapMessage() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_message_ScaleGestureMapMessage', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_message_AbstractGestureMapMessage() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_message_AbstractGestureMapMessage', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_message_RotateGestureMapMessage() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_message_RotateGestureMapMessage', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_FPointBounds() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_FPointBounds', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_CoordUtil() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_CoordUtil', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_AeUtil() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AeUtil', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_VirtualEarthProjection() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_VirtualEarthProjection', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_Rectangle() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_Rectangle', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_Inner_3dMap_location() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_Inner_3dMap_location', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_AMapEngineUtils() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AMapEngineUtils', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_FPoint3() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_FPoint3', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_AMapEtaDecoder() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AMapEtaDecoder', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_FPointBounds_Builder() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_FPointBounds_Builder', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_Inner_3dMap_locationOption() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_Inner_3dMap_locationOption', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_FPoint() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_FPoint', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_AMapNativeParticleSystem() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AMapNativeParticleSystem', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_AbstractCameraUpdateMessage() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AbstractCameraUpdateMessage', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_AMapNativeBuildingRenderer() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_AMapNativeBuildingRenderer', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_autonavi_amap_mapcore_Convert() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_autonavi_amap_mapcore_Convert', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_offlineservice_AMapPermissionActivity() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_offlineservice_AMapPermissionActivity', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_UiSettings() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_UiSettings', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_SwipeDismissTouchListener() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_SwipeDismissTouchListener', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_InfoWindowParams() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_InfoWindowParams', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_CameraUpdateFactory() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_CameraUpdateFactory', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_AMapException() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_AMapException', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_AMapOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_AMapOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_AMapOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_AMapOptionsCreator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_CoordinateConverter() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_CoordinateConverter', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_utils_SpatialRelationUtil() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_utils_SpatialRelationUtil', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_utils_overlay_MovingPointOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_utils_overlay_MovingPointOverlay', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_utils_overlay_SmoothMoveMarker() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_utils_overlay_SmoothMoveMarker', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_CameraUpdate() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_CameraUpdate', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_SwipeDismissCallBack() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_SwipeDismissCallBack', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_SwipeDismissView() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_SwipeDismissView', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_MapsInitializer() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_MapsInitializer', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_offlinemap_OfflineMapStatus() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_offlinemap_OfflineMapStatus', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_offlinemap_OfflineMapProvince() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_offlinemap_OfflineMapProvince', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_offlinemap_DownloadProgressView() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_offlinemap_DownloadProgressView', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_offlinemap_Province() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_offlinemap_Province', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_offlinemap_OfflineMapManager() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_offlinemap_OfflineMapManager', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_offlinemap_OfflineMapCity() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_offlinemap_OfflineMapCity', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_offlinemap_OfflineMapActivity() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_offlinemap_OfflineMapActivity', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_offlinemap_City() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_offlinemap_City', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_Projection() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_Projection', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_Polygon() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_Polygon', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_BitmapDescriptor() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_BitmapDescriptor', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_PolygonHoleOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_PolygonHoleOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_TileOverlayOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_TileOverlayOptionsCreator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_Poi() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_Poi', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_MyLocationStyle() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_MyLocationStyle', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_RouteOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_RouteOverlay', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_VisibleRegion() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_VisibleRegion', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_LatLngCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_LatLngCreator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_CircleHoleOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_CircleHoleOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_Text() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_Text', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_LatLngBounds_Builder() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_LatLngBounds_Builder', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_NavigateArrowOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_NavigateArrowOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_BitmapDescriptorFactory() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_BitmapDescriptorFactory', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_UrlTileProvider() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_UrlTileProvider', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_MultiPointOverlayOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_MultiPointOverlayOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_PoiCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_PoiCreator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_PolylineOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_PolylineOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_Tile() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_Tile', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_GL3DModel() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_GL3DModel', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_Gradient() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_Gradient', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_NaviPara() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_NaviPara', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_GroundOverlayOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_GroundOverlayOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_GL3DModelOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_GL3DModelOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_GroundOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_GroundOverlay', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_MyTrafficStyle() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_MyTrafficStyle', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_CameraPosition() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_CameraPosition', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_TextOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_TextOptionsCreator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_PoiPara() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_PoiPara', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_MarkerOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_MarkerOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_HeatmapTileProvider() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_HeatmapTileProvider', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_NavigateArrow() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_NavigateArrow', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_animation_AnimationSet() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_animation_AnimationSet', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_animation_RotateAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_animation_RotateAnimation', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_animation_TranslateAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_animation_TranslateAnimation', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_animation_Animation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_animation_Animation', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_animation_EmergeAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_animation_EmergeAnimation', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_animation_AlphaAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_animation_AlphaAnimation', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_animation_ScaleAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_animation_ScaleAnimation', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_LatLngBounds() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_LatLngBounds', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_CustomMapStyleOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_CustomMapStyleOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_BuildingOverlayOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_BuildingOverlayOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_CrossOverlayOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_CrossOverlayOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_VisibleRegionCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_VisibleRegionCreator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_LatLng() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_LatLng', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_TileProjection() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_TileProjection', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_AMapPara() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_AMapPara', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_CameraPosition_Builder() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_CameraPosition_Builder', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_BasePointOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_BasePointOverlay', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_CircleOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_CircleOptionsCreator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_Arc() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_Arc', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_AMapCameraInfo() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_AMapCameraInfo', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_Circle() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_Circle', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_PolygonOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_PolygonOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_WeightedLatLng() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_WeightedLatLng', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_MyLocationStyleCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_MyLocationStyleCreator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_MarkerOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_MarkerOptionsCreator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_MultiPointItem() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_MultiPointItem', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_LatLngBoundsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_LatLngBoundsCreator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_ArcOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_ArcOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_BitmapDescriptorCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_BitmapDescriptorCreator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_CircleOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_CircleOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_NavigateArrowOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_NavigateArrowOptionsCreator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_RuntimeRemoteException() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_RuntimeRemoteException', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_AMapGLOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_AMapGLOverlay', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_HeatmapTileProvider_Builder() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_HeatmapTileProvider_Builder', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_MultiPointOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_MultiPointOverlay', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_BaseOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_BaseOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_PolylineOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_PolylineOptionsCreator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_BaseOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_BaseOverlay', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_Marker() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_Marker', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_TileOverlayOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_TileOverlayOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_RoutePara() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_RoutePara', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_ArcOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_ArcOptionsCreator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_CameraPositionCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_CameraPositionCreator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_CrossOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_CrossOverlay', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_particle_ParticleOverLifeModule() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_ParticleOverLifeModule', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_particle_ConstantRotationOverLife() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_ConstantRotationOverLife', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_particle_SinglePointParticleShape() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_SinglePointParticleShape', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_particle_RandomVelocityBetweenTwoConstants() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_RandomVelocityBetweenTwoConstants', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_particle_CurveSizeOverLife() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_CurveSizeOverLife', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_particle_ParticleEmissionModule() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_ParticleEmissionModule', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_particle_SizeOverLife() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_SizeOverLife', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_particle_RectParticleShape() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_RectParticleShape', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_particle_ColorGenerate() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_ColorGenerate', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_particle_VelocityGenerate() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_VelocityGenerate', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_particle_RotationOverLife() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_RotationOverLife', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_particle_RandomColorBetWeenTwoConstants() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_RandomColorBetWeenTwoConstants', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_particle_ParticleShapeModule() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_ParticleShapeModule', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_particle_ParticleOverlayOptionsFactory() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_ParticleOverlayOptionsFactory', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_particle_ParticleOverlayOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_ParticleOverlayOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_particle_ParticleOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_particle_ParticleOverlay', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_BaseHoleOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_BaseHoleOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_TextOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_TextOptions', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_TileOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_TileOverlay', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_PolygonOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_PolygonOptionsCreator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_TileProjectionCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_TileProjectionCreator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_GroundOverlayOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_GroundOverlayOptionsCreator', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_IndoorBuildingInfo() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_IndoorBuildingInfo', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_Polyline() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_Polyline', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_model_BuildingOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_model_BuildingOverlay', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_TextureMapView() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_TextureMapView', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_AMapUtils() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_AMapUtils', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_InfoWindowAnimationManager() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_InfoWindowAnimationManager', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_WearMapView() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_WearMapView', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_AMap() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_AMap', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_maps_MapView() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_maps_MapView', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_trace_TraceLocation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_trace_TraceLocation', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_trace_LBSTraceClient() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_trace_LBSTraceClient', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_trace_TraceOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_trace_TraceOverlay', {'refId': refId});
    return result;
  }
  
  Future<bool> iscom_amap_api_mapcore_util_() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_mapcore_util_', {'refId': refId});
    return result;
  }
  

  Future<com_autonavi_ae_gmap_maploader_Pools> ascom_autonavi_ae_gmap_maploader_Pools() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_maploader_Pools', {'refId': refId});
    return com_autonavi_ae_gmap_maploader_Pools()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_maploader_ProcessingTile> ascom_autonavi_ae_gmap_maploader_ProcessingTile() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_maploader_ProcessingTile', {'refId': refId});
    return com_autonavi_ae_gmap_maploader_ProcessingTile()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_GLMapEngine> ascom_autonavi_ae_gmap_GLMapEngine() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_GLMapEngine', {'refId': refId});
    return com_autonavi_ae_gmap_GLMapEngine()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_AbstractMapMessage> ascom_autonavi_ae_gmap_AbstractMapMessage() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_AbstractMapMessage', {'refId': refId});
    return com_autonavi_ae_gmap_AbstractMapMessage()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_glinterface_MapLabelItem> ascom_autonavi_ae_gmap_glinterface_MapLabelItem() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glinterface_MapLabelItem', {'refId': refId});
    return com_autonavi_ae_gmap_glinterface_MapLabelItem()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_glanimation_AdglMapAnimationMgr> ascom_autonavi_ae_gmap_glanimation_AdglMapAnimationMgr() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AdglMapAnimationMgr', {'refId': refId});
    return com_autonavi_ae_gmap_glanimation_AdglMapAnimationMgr()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_glanimation_AdglAnimation2V> ascom_autonavi_ae_gmap_glanimation_AdglAnimation2V() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AdglAnimation2V', {'refId': refId});
    return com_autonavi_ae_gmap_glanimation_AdglAnimation2V()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_glanimation_AdglAnimationContantValues> ascom_autonavi_ae_gmap_glanimation_AdglAnimationContantValues() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AdglAnimationContantValues', {'refId': refId});
    return com_autonavi_ae_gmap_glanimation_AdglAnimationContantValues()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_glanimation_AdglMapAnimFling> ascom_autonavi_ae_gmap_glanimation_AdglMapAnimFling() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AdglMapAnimFling', {'refId': refId});
    return com_autonavi_ae_gmap_glanimation_AdglMapAnimFling()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_glanimation_AbstractAdglAnimation> ascom_autonavi_ae_gmap_glanimation_AbstractAdglAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AbstractAdglAnimation', {'refId': refId});
    return com_autonavi_ae_gmap_glanimation_AbstractAdglAnimation()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_glanimation_AdglAnimation1V> ascom_autonavi_ae_gmap_glanimation_AdglAnimation1V() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AdglAnimation1V', {'refId': refId});
    return com_autonavi_ae_gmap_glanimation_AdglAnimation1V()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_glanimation_AdglMapAnimPivotZoom> ascom_autonavi_ae_gmap_glanimation_AdglMapAnimPivotZoom() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AdglMapAnimPivotZoom', {'refId': refId});
    return com_autonavi_ae_gmap_glanimation_AdglMapAnimPivotZoom()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam> ascom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam', {'refId': refId});
    return com_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam1V> ascom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam1V() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam1V', {'refId': refId});
    return com_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam1V()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_glanimation_AdglMapAnimGroup> ascom_autonavi_ae_gmap_glanimation_AdglMapAnimGroup() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AdglMapAnimGroup', {'refId': refId});
    return com_autonavi_ae_gmap_glanimation_AdglMapAnimGroup()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam2V> ascom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam2V() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam2V', {'refId': refId});
    return com_autonavi_ae_gmap_glanimation_AbstractAdglAnimationParam2V()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_style_StyleItem> ascom_autonavi_ae_gmap_style_StyleItem() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_style_StyleItem', {'refId': refId});
    return com_autonavi_ae_gmap_style_StyleItem()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_style_StyleElement> ascom_autonavi_ae_gmap_style_StyleElement() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_style_StyleElement', {'refId': refId});
    return com_autonavi_ae_gmap_style_StyleElement()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_GLMapEngine_MapViewInitParam> ascom_autonavi_ae_gmap_GLMapEngine_MapViewInitParam() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_GLMapEngine_MapViewInitParam', {'refId': refId});
    return com_autonavi_ae_gmap_GLMapEngine_MapViewInitParam()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_gesture_EAMapPlatformGestureInfo> ascom_autonavi_ae_gmap_gesture_EAMapPlatformGestureInfo() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gesture_EAMapPlatformGestureInfo', {'refId': refId});
    return com_autonavi_ae_gmap_gesture_EAMapPlatformGestureInfo()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_GLMapState> ascom_autonavi_ae_gmap_GLMapState() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_GLMapState', {'refId': refId});
    return com_autonavi_ae_gmap_GLMapState()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_gloverlay_BaseRouteOverlay> ascom_autonavi_ae_gmap_gloverlay_BaseRouteOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gloverlay_BaseRouteOverlay', {'refId': refId});
    return com_autonavi_ae_gmap_gloverlay_BaseRouteOverlay()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_gloverlay_GLTextureProperty> ascom_autonavi_ae_gmap_gloverlay_GLTextureProperty() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gloverlay_GLTextureProperty', {'refId': refId});
    return com_autonavi_ae_gmap_gloverlay_GLTextureProperty()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_gloverlay_GLCrossVector> ascom_autonavi_ae_gmap_gloverlay_GLCrossVector() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gloverlay_GLCrossVector', {'refId': refId});
    return com_autonavi_ae_gmap_gloverlay_GLCrossVector()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_gloverlay_GLOverlayBundle_GLAmapFocusHits> ascom_autonavi_ae_gmap_gloverlay_GLOverlayBundle_GLAmapFocusHits() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gloverlay_GLOverlayBundle_GLAmapFocusHits', {'refId': refId});
    return com_autonavi_ae_gmap_gloverlay_GLOverlayBundle_GLAmapFocusHits()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_gloverlay_GLCrossVector_AVectorCrossAttr> ascom_autonavi_ae_gmap_gloverlay_GLCrossVector_AVectorCrossAttr() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gloverlay_GLCrossVector_AVectorCrossAttr', {'refId': refId});
    return com_autonavi_ae_gmap_gloverlay_GLCrossVector_AVectorCrossAttr()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_gloverlay_CrossVectorOverlay> ascom_autonavi_ae_gmap_gloverlay_CrossVectorOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gloverlay_CrossVectorOverlay', {'refId': refId});
    return com_autonavi_ae_gmap_gloverlay_CrossVectorOverlay()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_gloverlay_GLOverlay> ascom_autonavi_ae_gmap_gloverlay_GLOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gloverlay_GLOverlay', {'refId': refId});
    return com_autonavi_ae_gmap_gloverlay_GLOverlay()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_gloverlay_GLRouteProperty> ascom_autonavi_ae_gmap_gloverlay_GLRouteProperty() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gloverlay_GLRouteProperty', {'refId': refId});
    return com_autonavi_ae_gmap_gloverlay_GLRouteProperty()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_gloverlay_GLOverlayTexture> ascom_autonavi_ae_gmap_gloverlay_GLOverlayTexture() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_gloverlay_GLOverlayTexture', {'refId': refId});
    return com_autonavi_ae_gmap_gloverlay_GLOverlayTexture()..refId = result;
  }
  
  Future<com_autonavi_ae_gmap_GLMapEngine_InitParam> ascom_autonavi_ae_gmap_GLMapEngine_InitParam() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_ae_gmap_GLMapEngine_InitParam', {'refId': refId});
    return com_autonavi_ae_gmap_GLMapEngine_InitParam()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_maploader_AMapLoader_ADataRequestParam> ascom_autonavi_amap_mapcore_maploader_AMapLoader_ADataRequestParam() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_maploader_AMapLoader_ADataRequestParam', {'refId': refId});
    return com_autonavi_amap_mapcore_maploader_AMapLoader_ADataRequestParam()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_maploader_NetworkState> ascom_autonavi_amap_mapcore_maploader_NetworkState() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_maploader_NetworkState', {'refId': refId});
    return com_autonavi_amap_mapcore_maploader_NetworkState()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_maploader_AMapLoader_AMapGridDownloadRequest> ascom_autonavi_amap_mapcore_maploader_AMapLoader_AMapGridDownloadRequest() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_maploader_AMapLoader_AMapGridDownloadRequest', {'refId': refId});
    return com_autonavi_amap_mapcore_maploader_AMapLoader_AMapGridDownloadRequest()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_maploader_AMapLoader> ascom_autonavi_amap_mapcore_maploader_AMapLoader() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_maploader_AMapLoader', {'refId': refId});
    return com_autonavi_amap_mapcore_maploader_AMapLoader()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_MapProjection> ascom_autonavi_amap_mapcore_MapProjection() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_MapProjection', {'refId': refId});
    return com_autonavi_amap_mapcore_MapProjection()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_tools_TextTextureGenerator> ascom_autonavi_amap_mapcore_tools_TextTextureGenerator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_tools_TextTextureGenerator', {'refId': refId});
    return com_autonavi_amap_mapcore_tools_TextTextureGenerator()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_tools_GLFileUtil> ascom_autonavi_amap_mapcore_tools_GLFileUtil() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_tools_GLFileUtil', {'refId': refId});
    return com_autonavi_amap_mapcore_tools_GLFileUtil()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_tools_GlMapUtil> ascom_autonavi_amap_mapcore_tools_GlMapUtil() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_tools_GlMapUtil', {'refId': refId});
    return com_autonavi_amap_mapcore_tools_GlMapUtil()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_tools_GLMapStaticValue> ascom_autonavi_amap_mapcore_tools_GLMapStaticValue() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_tools_GLMapStaticValue', {'refId': refId});
    return com_autonavi_amap_mapcore_tools_GLMapStaticValue()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_tools_GLConvertUtil> ascom_autonavi_amap_mapcore_tools_GLConvertUtil() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_tools_GLConvertUtil', {'refId': refId});
    return com_autonavi_amap_mapcore_tools_GLConvertUtil()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_MsgProcessor> ascom_autonavi_amap_mapcore_MsgProcessor() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_MsgProcessor', {'refId': refId});
    return com_autonavi_amap_mapcore_MsgProcessor()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_AeUtil_UnZipFileBrake> ascom_autonavi_amap_mapcore_AeUtil_UnZipFileBrake() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AeUtil_UnZipFileBrake', {'refId': refId});
    return com_autonavi_amap_mapcore_AeUtil_UnZipFileBrake()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_AbstractNativeInstance> ascom_autonavi_amap_mapcore_AbstractNativeInstance() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AbstractNativeInstance', {'refId': refId});
    return com_autonavi_amap_mapcore_AbstractNativeInstance()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_LinkInfo> ascom_autonavi_amap_mapcore_LinkInfo() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_LinkInfo', {'refId': refId});
    return com_autonavi_amap_mapcore_LinkInfo()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_AMapNativePolyline> ascom_autonavi_amap_mapcore_AMapNativePolyline() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AMapNativePolyline', {'refId': refId});
    return com_autonavi_amap_mapcore_AMapNativePolyline()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_IPoint> ascom_autonavi_amap_mapcore_IPoint() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_IPoint', {'refId': refId});
    return com_autonavi_amap_mapcore_IPoint()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_gles_AMapNativeGLShaderManager> ascom_autonavi_amap_mapcore_gles_AMapNativeGLShaderManager() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_gles_AMapNativeGLShaderManager', {'refId': refId});
    return com_autonavi_amap_mapcore_gles_AMapNativeGLShaderManager()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_DPoint> ascom_autonavi_amap_mapcore_DPoint() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_DPoint', {'refId': refId});
    return com_autonavi_amap_mapcore_DPoint()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_AMapNativeRenderer> ascom_autonavi_amap_mapcore_AMapNativeRenderer() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AMapNativeRenderer', {'refId': refId});
    return com_autonavi_amap_mapcore_AMapNativeRenderer()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_FileUtil> ascom_autonavi_amap_mapcore_FileUtil() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_FileUtil', {'refId': refId});
    return com_autonavi_amap_mapcore_FileUtil()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_animation_GLTranslateAnimation> ascom_autonavi_amap_mapcore_animation_GLTranslateAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_animation_GLTranslateAnimation', {'refId': refId});
    return com_autonavi_amap_mapcore_animation_GLTranslateAnimation()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_animation_GLRotateAnimation> ascom_autonavi_amap_mapcore_animation_GLRotateAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_animation_GLRotateAnimation', {'refId': refId});
    return com_autonavi_amap_mapcore_animation_GLRotateAnimation()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_animation_GLAlphaAnimation> ascom_autonavi_amap_mapcore_animation_GLAlphaAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_animation_GLAlphaAnimation', {'refId': refId});
    return com_autonavi_amap_mapcore_animation_GLAlphaAnimation()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_animation_GLScaleAnimation> ascom_autonavi_amap_mapcore_animation_GLScaleAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_animation_GLScaleAnimation', {'refId': refId});
    return com_autonavi_amap_mapcore_animation_GLScaleAnimation()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_animation_GLTransformation> ascom_autonavi_amap_mapcore_animation_GLTransformation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_animation_GLTransformation', {'refId': refId});
    return com_autonavi_amap_mapcore_animation_GLTransformation()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_animation_GLAnimationSet> ascom_autonavi_amap_mapcore_animation_GLAnimationSet() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_animation_GLAnimationSet', {'refId': refId});
    return com_autonavi_amap_mapcore_animation_GLAnimationSet()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_animation_GLEmergeAnimation> ascom_autonavi_amap_mapcore_animation_GLEmergeAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_animation_GLEmergeAnimation', {'refId': refId});
    return com_autonavi_amap_mapcore_animation_GLEmergeAnimation()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_animation_GLAnimation> ascom_autonavi_amap_mapcore_animation_GLAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_animation_GLAnimation', {'refId': refId});
    return com_autonavi_amap_mapcore_animation_GLAnimation()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_MapConfig> ascom_autonavi_amap_mapcore_MapConfig() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_MapConfig', {'refId': refId});
    return com_autonavi_amap_mapcore_MapConfig()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_message_HoverGestureMapMessage> ascom_autonavi_amap_mapcore_message_HoverGestureMapMessage() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_message_HoverGestureMapMessage', {'refId': refId});
    return com_autonavi_amap_mapcore_message_HoverGestureMapMessage()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_message_MoveGestureMapMessage> ascom_autonavi_amap_mapcore_message_MoveGestureMapMessage() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_message_MoveGestureMapMessage', {'refId': refId});
    return com_autonavi_amap_mapcore_message_MoveGestureMapMessage()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_message_ScaleGestureMapMessage> ascom_autonavi_amap_mapcore_message_ScaleGestureMapMessage() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_message_ScaleGestureMapMessage', {'refId': refId});
    return com_autonavi_amap_mapcore_message_ScaleGestureMapMessage()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_message_AbstractGestureMapMessage> ascom_autonavi_amap_mapcore_message_AbstractGestureMapMessage() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_message_AbstractGestureMapMessage', {'refId': refId});
    return com_autonavi_amap_mapcore_message_AbstractGestureMapMessage()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_message_RotateGestureMapMessage> ascom_autonavi_amap_mapcore_message_RotateGestureMapMessage() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_message_RotateGestureMapMessage', {'refId': refId});
    return com_autonavi_amap_mapcore_message_RotateGestureMapMessage()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_FPointBounds> ascom_autonavi_amap_mapcore_FPointBounds() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_FPointBounds', {'refId': refId});
    return com_autonavi_amap_mapcore_FPointBounds()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_CoordUtil> ascom_autonavi_amap_mapcore_CoordUtil() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_CoordUtil', {'refId': refId});
    return com_autonavi_amap_mapcore_CoordUtil()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_AeUtil> ascom_autonavi_amap_mapcore_AeUtil() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AeUtil', {'refId': refId});
    return com_autonavi_amap_mapcore_AeUtil()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_VirtualEarthProjection> ascom_autonavi_amap_mapcore_VirtualEarthProjection() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_VirtualEarthProjection', {'refId': refId});
    return com_autonavi_amap_mapcore_VirtualEarthProjection()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_Rectangle> ascom_autonavi_amap_mapcore_Rectangle() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_Rectangle', {'refId': refId});
    return com_autonavi_amap_mapcore_Rectangle()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_Inner_3dMap_location> ascom_autonavi_amap_mapcore_Inner_3dMap_location() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_Inner_3dMap_location', {'refId': refId});
    return com_autonavi_amap_mapcore_Inner_3dMap_location()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_AMapEngineUtils> ascom_autonavi_amap_mapcore_AMapEngineUtils() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AMapEngineUtils', {'refId': refId});
    return com_autonavi_amap_mapcore_AMapEngineUtils()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_FPoint3> ascom_autonavi_amap_mapcore_FPoint3() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_FPoint3', {'refId': refId});
    return com_autonavi_amap_mapcore_FPoint3()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_AMapEtaDecoder> ascom_autonavi_amap_mapcore_AMapEtaDecoder() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AMapEtaDecoder', {'refId': refId});
    return com_autonavi_amap_mapcore_AMapEtaDecoder()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_FPointBounds_Builder> ascom_autonavi_amap_mapcore_FPointBounds_Builder() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_FPointBounds_Builder', {'refId': refId});
    return com_autonavi_amap_mapcore_FPointBounds_Builder()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_Inner_3dMap_locationOption> ascom_autonavi_amap_mapcore_Inner_3dMap_locationOption() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_Inner_3dMap_locationOption', {'refId': refId});
    return com_autonavi_amap_mapcore_Inner_3dMap_locationOption()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_FPoint> ascom_autonavi_amap_mapcore_FPoint() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_FPoint', {'refId': refId});
    return com_autonavi_amap_mapcore_FPoint()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_AMapNativeParticleSystem> ascom_autonavi_amap_mapcore_AMapNativeParticleSystem() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AMapNativeParticleSystem', {'refId': refId});
    return com_autonavi_amap_mapcore_AMapNativeParticleSystem()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_AbstractCameraUpdateMessage> ascom_autonavi_amap_mapcore_AbstractCameraUpdateMessage() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AbstractCameraUpdateMessage', {'refId': refId});
    return com_autonavi_amap_mapcore_AbstractCameraUpdateMessage()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_AMapNativeBuildingRenderer> ascom_autonavi_amap_mapcore_AMapNativeBuildingRenderer() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_AMapNativeBuildingRenderer', {'refId': refId});
    return com_autonavi_amap_mapcore_AMapNativeBuildingRenderer()..refId = result;
  }
  
  Future<com_autonavi_amap_mapcore_Convert> ascom_autonavi_amap_mapcore_Convert() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_autonavi_amap_mapcore_Convert', {'refId': refId});
    return com_autonavi_amap_mapcore_Convert()..refId = result;
  }
  
  Future<com_amap_api_offlineservice_AMapPermissionActivity> ascom_amap_api_offlineservice_AMapPermissionActivity() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_offlineservice_AMapPermissionActivity', {'refId': refId});
    return com_amap_api_offlineservice_AMapPermissionActivity()..refId = result;
  }
  
  Future<com_amap_api_maps_UiSettings> ascom_amap_api_maps_UiSettings() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_UiSettings', {'refId': refId});
    return com_amap_api_maps_UiSettings()..refId = result;
  }
  
  Future<com_amap_api_maps_SwipeDismissTouchListener> ascom_amap_api_maps_SwipeDismissTouchListener() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_SwipeDismissTouchListener', {'refId': refId});
    return com_amap_api_maps_SwipeDismissTouchListener()..refId = result;
  }
  
  Future<com_amap_api_maps_InfoWindowParams> ascom_amap_api_maps_InfoWindowParams() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_InfoWindowParams', {'refId': refId});
    return com_amap_api_maps_InfoWindowParams()..refId = result;
  }
  
  Future<com_amap_api_maps_CameraUpdateFactory> ascom_amap_api_maps_CameraUpdateFactory() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_CameraUpdateFactory', {'refId': refId});
    return com_amap_api_maps_CameraUpdateFactory()..refId = result;
  }
  
  Future<com_amap_api_maps_AMapException> ascom_amap_api_maps_AMapException() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_AMapException', {'refId': refId});
    return com_amap_api_maps_AMapException()..refId = result;
  }
  
  Future<com_amap_api_maps_AMapOptions> ascom_amap_api_maps_AMapOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_AMapOptions', {'refId': refId});
    return com_amap_api_maps_AMapOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_AMapOptionsCreator> ascom_amap_api_maps_AMapOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_AMapOptionsCreator', {'refId': refId});
    return com_amap_api_maps_AMapOptionsCreator()..refId = result;
  }
  
  Future<com_amap_api_maps_CoordinateConverter> ascom_amap_api_maps_CoordinateConverter() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_CoordinateConverter', {'refId': refId});
    return com_amap_api_maps_CoordinateConverter()..refId = result;
  }
  
  Future<com_amap_api_maps_utils_SpatialRelationUtil> ascom_amap_api_maps_utils_SpatialRelationUtil() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_utils_SpatialRelationUtil', {'refId': refId});
    return com_amap_api_maps_utils_SpatialRelationUtil()..refId = result;
  }
  
  Future<com_amap_api_maps_utils_overlay_MovingPointOverlay> ascom_amap_api_maps_utils_overlay_MovingPointOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_utils_overlay_MovingPointOverlay', {'refId': refId});
    return com_amap_api_maps_utils_overlay_MovingPointOverlay()..refId = result;
  }
  
  Future<com_amap_api_maps_utils_overlay_SmoothMoveMarker> ascom_amap_api_maps_utils_overlay_SmoothMoveMarker() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_utils_overlay_SmoothMoveMarker', {'refId': refId});
    return com_amap_api_maps_utils_overlay_SmoothMoveMarker()..refId = result;
  }
  
  Future<com_amap_api_maps_CameraUpdate> ascom_amap_api_maps_CameraUpdate() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_CameraUpdate', {'refId': refId});
    return com_amap_api_maps_CameraUpdate()..refId = result;
  }
  
  Future<com_amap_api_maps_SwipeDismissCallBack> ascom_amap_api_maps_SwipeDismissCallBack() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_SwipeDismissCallBack', {'refId': refId});
    return com_amap_api_maps_SwipeDismissCallBack()..refId = result;
  }
  
  Future<com_amap_api_maps_SwipeDismissView> ascom_amap_api_maps_SwipeDismissView() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_SwipeDismissView', {'refId': refId});
    return com_amap_api_maps_SwipeDismissView()..refId = result;
  }
  
  Future<com_amap_api_maps_MapsInitializer> ascom_amap_api_maps_MapsInitializer() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_MapsInitializer', {'refId': refId});
    return com_amap_api_maps_MapsInitializer()..refId = result;
  }
  
  Future<com_amap_api_maps_offlinemap_OfflineMapStatus> ascom_amap_api_maps_offlinemap_OfflineMapStatus() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_offlinemap_OfflineMapStatus', {'refId': refId});
    return com_amap_api_maps_offlinemap_OfflineMapStatus()..refId = result;
  }
  
  Future<com_amap_api_maps_offlinemap_OfflineMapProvince> ascom_amap_api_maps_offlinemap_OfflineMapProvince() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_offlinemap_OfflineMapProvince', {'refId': refId});
    return com_amap_api_maps_offlinemap_OfflineMapProvince()..refId = result;
  }
  
  Future<com_amap_api_maps_offlinemap_DownloadProgressView> ascom_amap_api_maps_offlinemap_DownloadProgressView() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_offlinemap_DownloadProgressView', {'refId': refId});
    return com_amap_api_maps_offlinemap_DownloadProgressView()..refId = result;
  }
  
  Future<com_amap_api_maps_offlinemap_Province> ascom_amap_api_maps_offlinemap_Province() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_offlinemap_Province', {'refId': refId});
    return com_amap_api_maps_offlinemap_Province()..refId = result;
  }
  
  Future<com_amap_api_maps_offlinemap_OfflineMapManager> ascom_amap_api_maps_offlinemap_OfflineMapManager() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_offlinemap_OfflineMapManager', {'refId': refId});
    return com_amap_api_maps_offlinemap_OfflineMapManager()..refId = result;
  }
  
  Future<com_amap_api_maps_offlinemap_OfflineMapCity> ascom_amap_api_maps_offlinemap_OfflineMapCity() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_offlinemap_OfflineMapCity', {'refId': refId});
    return com_amap_api_maps_offlinemap_OfflineMapCity()..refId = result;
  }
  
  Future<com_amap_api_maps_offlinemap_OfflineMapActivity> ascom_amap_api_maps_offlinemap_OfflineMapActivity() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_offlinemap_OfflineMapActivity', {'refId': refId});
    return com_amap_api_maps_offlinemap_OfflineMapActivity()..refId = result;
  }
  
  Future<com_amap_api_maps_offlinemap_City> ascom_amap_api_maps_offlinemap_City() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_offlinemap_City', {'refId': refId});
    return com_amap_api_maps_offlinemap_City()..refId = result;
  }
  
  Future<com_amap_api_maps_Projection> ascom_amap_api_maps_Projection() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_Projection', {'refId': refId});
    return com_amap_api_maps_Projection()..refId = result;
  }
  
  Future<com_amap_api_maps_model_Polygon> ascom_amap_api_maps_model_Polygon() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_Polygon', {'refId': refId});
    return com_amap_api_maps_model_Polygon()..refId = result;
  }
  
  Future<com_amap_api_maps_model_BitmapDescriptor> ascom_amap_api_maps_model_BitmapDescriptor() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_BitmapDescriptor', {'refId': refId});
    return com_amap_api_maps_model_BitmapDescriptor()..refId = result;
  }
  
  Future<com_amap_api_maps_model_PolygonHoleOptions> ascom_amap_api_maps_model_PolygonHoleOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_PolygonHoleOptions', {'refId': refId});
    return com_amap_api_maps_model_PolygonHoleOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_TileOverlayOptionsCreator> ascom_amap_api_maps_model_TileOverlayOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_TileOverlayOptionsCreator', {'refId': refId});
    return com_amap_api_maps_model_TileOverlayOptionsCreator()..refId = result;
  }
  
  Future<com_amap_api_maps_model_Poi> ascom_amap_api_maps_model_Poi() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_Poi', {'refId': refId});
    return com_amap_api_maps_model_Poi()..refId = result;
  }
  
  Future<com_amap_api_maps_model_MyLocationStyle> ascom_amap_api_maps_model_MyLocationStyle() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_MyLocationStyle', {'refId': refId});
    return com_amap_api_maps_model_MyLocationStyle()..refId = result;
  }
  
  Future<com_amap_api_maps_model_RouteOverlay> ascom_amap_api_maps_model_RouteOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_RouteOverlay', {'refId': refId});
    return com_amap_api_maps_model_RouteOverlay()..refId = result;
  }
  
  Future<com_amap_api_maps_model_VisibleRegion> ascom_amap_api_maps_model_VisibleRegion() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_VisibleRegion', {'refId': refId});
    return com_amap_api_maps_model_VisibleRegion()..refId = result;
  }
  
  Future<com_amap_api_maps_model_LatLngCreator> ascom_amap_api_maps_model_LatLngCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_LatLngCreator', {'refId': refId});
    return com_amap_api_maps_model_LatLngCreator()..refId = result;
  }
  
  Future<com_amap_api_maps_model_CircleHoleOptions> ascom_amap_api_maps_model_CircleHoleOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_CircleHoleOptions', {'refId': refId});
    return com_amap_api_maps_model_CircleHoleOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_Text> ascom_amap_api_maps_model_Text() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_Text', {'refId': refId});
    return com_amap_api_maps_model_Text()..refId = result;
  }
  
  Future<com_amap_api_maps_model_LatLngBounds_Builder> ascom_amap_api_maps_model_LatLngBounds_Builder() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_LatLngBounds_Builder', {'refId': refId});
    return com_amap_api_maps_model_LatLngBounds_Builder()..refId = result;
  }
  
  Future<com_amap_api_maps_model_NavigateArrowOptions> ascom_amap_api_maps_model_NavigateArrowOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_NavigateArrowOptions', {'refId': refId});
    return com_amap_api_maps_model_NavigateArrowOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_BitmapDescriptorFactory> ascom_amap_api_maps_model_BitmapDescriptorFactory() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_BitmapDescriptorFactory', {'refId': refId});
    return com_amap_api_maps_model_BitmapDescriptorFactory()..refId = result;
  }
  
  Future<com_amap_api_maps_model_UrlTileProvider> ascom_amap_api_maps_model_UrlTileProvider() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_UrlTileProvider', {'refId': refId});
    return com_amap_api_maps_model_UrlTileProvider()..refId = result;
  }
  
  Future<com_amap_api_maps_model_MultiPointOverlayOptions> ascom_amap_api_maps_model_MultiPointOverlayOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_MultiPointOverlayOptions', {'refId': refId});
    return com_amap_api_maps_model_MultiPointOverlayOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_PoiCreator> ascom_amap_api_maps_model_PoiCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_PoiCreator', {'refId': refId});
    return com_amap_api_maps_model_PoiCreator()..refId = result;
  }
  
  Future<com_amap_api_maps_model_PolylineOptions> ascom_amap_api_maps_model_PolylineOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_PolylineOptions', {'refId': refId});
    return com_amap_api_maps_model_PolylineOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_Tile> ascom_amap_api_maps_model_Tile() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_Tile', {'refId': refId});
    return com_amap_api_maps_model_Tile()..refId = result;
  }
  
  Future<com_amap_api_maps_model_GL3DModel> ascom_amap_api_maps_model_GL3DModel() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_GL3DModel', {'refId': refId});
    return com_amap_api_maps_model_GL3DModel()..refId = result;
  }
  
  Future<com_amap_api_maps_model_Gradient> ascom_amap_api_maps_model_Gradient() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_Gradient', {'refId': refId});
    return com_amap_api_maps_model_Gradient()..refId = result;
  }
  
  Future<com_amap_api_maps_model_NaviPara> ascom_amap_api_maps_model_NaviPara() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_NaviPara', {'refId': refId});
    return com_amap_api_maps_model_NaviPara()..refId = result;
  }
  
  Future<com_amap_api_maps_model_GroundOverlayOptions> ascom_amap_api_maps_model_GroundOverlayOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_GroundOverlayOptions', {'refId': refId});
    return com_amap_api_maps_model_GroundOverlayOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_GL3DModelOptions> ascom_amap_api_maps_model_GL3DModelOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_GL3DModelOptions', {'refId': refId});
    return com_amap_api_maps_model_GL3DModelOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_GroundOverlay> ascom_amap_api_maps_model_GroundOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_GroundOverlay', {'refId': refId});
    return com_amap_api_maps_model_GroundOverlay()..refId = result;
  }
  
  Future<com_amap_api_maps_model_MyTrafficStyle> ascom_amap_api_maps_model_MyTrafficStyle() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_MyTrafficStyle', {'refId': refId});
    return com_amap_api_maps_model_MyTrafficStyle()..refId = result;
  }
  
  Future<com_amap_api_maps_model_CameraPosition> ascom_amap_api_maps_model_CameraPosition() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_CameraPosition', {'refId': refId});
    return com_amap_api_maps_model_CameraPosition()..refId = result;
  }
  
  Future<com_amap_api_maps_model_TextOptionsCreator> ascom_amap_api_maps_model_TextOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_TextOptionsCreator', {'refId': refId});
    return com_amap_api_maps_model_TextOptionsCreator()..refId = result;
  }
  
  Future<com_amap_api_maps_model_PoiPara> ascom_amap_api_maps_model_PoiPara() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_PoiPara', {'refId': refId});
    return com_amap_api_maps_model_PoiPara()..refId = result;
  }
  
  Future<com_amap_api_maps_model_MarkerOptions> ascom_amap_api_maps_model_MarkerOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_MarkerOptions', {'refId': refId});
    return com_amap_api_maps_model_MarkerOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_HeatmapTileProvider> ascom_amap_api_maps_model_HeatmapTileProvider() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_HeatmapTileProvider', {'refId': refId});
    return com_amap_api_maps_model_HeatmapTileProvider()..refId = result;
  }
  
  Future<com_amap_api_maps_model_NavigateArrow> ascom_amap_api_maps_model_NavigateArrow() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_NavigateArrow', {'refId': refId});
    return com_amap_api_maps_model_NavigateArrow()..refId = result;
  }
  
  Future<com_amap_api_maps_model_animation_AnimationSet> ascom_amap_api_maps_model_animation_AnimationSet() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_animation_AnimationSet', {'refId': refId});
    return com_amap_api_maps_model_animation_AnimationSet()..refId = result;
  }
  
  Future<com_amap_api_maps_model_animation_RotateAnimation> ascom_amap_api_maps_model_animation_RotateAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_animation_RotateAnimation', {'refId': refId});
    return com_amap_api_maps_model_animation_RotateAnimation()..refId = result;
  }
  
  Future<com_amap_api_maps_model_animation_TranslateAnimation> ascom_amap_api_maps_model_animation_TranslateAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_animation_TranslateAnimation', {'refId': refId});
    return com_amap_api_maps_model_animation_TranslateAnimation()..refId = result;
  }
  
  Future<com_amap_api_maps_model_animation_Animation> ascom_amap_api_maps_model_animation_Animation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_animation_Animation', {'refId': refId});
    return com_amap_api_maps_model_animation_Animation()..refId = result;
  }
  
  Future<com_amap_api_maps_model_animation_EmergeAnimation> ascom_amap_api_maps_model_animation_EmergeAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_animation_EmergeAnimation', {'refId': refId});
    return com_amap_api_maps_model_animation_EmergeAnimation()..refId = result;
  }
  
  Future<com_amap_api_maps_model_animation_AlphaAnimation> ascom_amap_api_maps_model_animation_AlphaAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_animation_AlphaAnimation', {'refId': refId});
    return com_amap_api_maps_model_animation_AlphaAnimation()..refId = result;
  }
  
  Future<com_amap_api_maps_model_animation_ScaleAnimation> ascom_amap_api_maps_model_animation_ScaleAnimation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_animation_ScaleAnimation', {'refId': refId});
    return com_amap_api_maps_model_animation_ScaleAnimation()..refId = result;
  }
  
  Future<com_amap_api_maps_model_LatLngBounds> ascom_amap_api_maps_model_LatLngBounds() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_LatLngBounds', {'refId': refId});
    return com_amap_api_maps_model_LatLngBounds()..refId = result;
  }
  
  Future<com_amap_api_maps_model_CustomMapStyleOptions> ascom_amap_api_maps_model_CustomMapStyleOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_CustomMapStyleOptions', {'refId': refId});
    return com_amap_api_maps_model_CustomMapStyleOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_BuildingOverlayOptions> ascom_amap_api_maps_model_BuildingOverlayOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_BuildingOverlayOptions', {'refId': refId});
    return com_amap_api_maps_model_BuildingOverlayOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_CrossOverlayOptions> ascom_amap_api_maps_model_CrossOverlayOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_CrossOverlayOptions', {'refId': refId});
    return com_amap_api_maps_model_CrossOverlayOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_VisibleRegionCreator> ascom_amap_api_maps_model_VisibleRegionCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_VisibleRegionCreator', {'refId': refId});
    return com_amap_api_maps_model_VisibleRegionCreator()..refId = result;
  }
  
  Future<com_amap_api_maps_model_LatLng> ascom_amap_api_maps_model_LatLng() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_LatLng', {'refId': refId});
    return com_amap_api_maps_model_LatLng()..refId = result;
  }
  
  Future<com_amap_api_maps_model_TileProjection> ascom_amap_api_maps_model_TileProjection() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_TileProjection', {'refId': refId});
    return com_amap_api_maps_model_TileProjection()..refId = result;
  }
  
  Future<com_amap_api_maps_model_AMapPara> ascom_amap_api_maps_model_AMapPara() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_AMapPara', {'refId': refId});
    return com_amap_api_maps_model_AMapPara()..refId = result;
  }
  
  Future<com_amap_api_maps_model_CameraPosition_Builder> ascom_amap_api_maps_model_CameraPosition_Builder() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_CameraPosition_Builder', {'refId': refId});
    return com_amap_api_maps_model_CameraPosition_Builder()..refId = result;
  }
  
  Future<com_amap_api_maps_model_BasePointOverlay> ascom_amap_api_maps_model_BasePointOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_BasePointOverlay', {'refId': refId});
    return com_amap_api_maps_model_BasePointOverlay()..refId = result;
  }
  
  Future<com_amap_api_maps_model_CircleOptionsCreator> ascom_amap_api_maps_model_CircleOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_CircleOptionsCreator', {'refId': refId});
    return com_amap_api_maps_model_CircleOptionsCreator()..refId = result;
  }
  
  Future<com_amap_api_maps_model_Arc> ascom_amap_api_maps_model_Arc() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_Arc', {'refId': refId});
    return com_amap_api_maps_model_Arc()..refId = result;
  }
  
  Future<com_amap_api_maps_model_AMapCameraInfo> ascom_amap_api_maps_model_AMapCameraInfo() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_AMapCameraInfo', {'refId': refId});
    return com_amap_api_maps_model_AMapCameraInfo()..refId = result;
  }
  
  Future<com_amap_api_maps_model_Circle> ascom_amap_api_maps_model_Circle() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_Circle', {'refId': refId});
    return com_amap_api_maps_model_Circle()..refId = result;
  }
  
  Future<com_amap_api_maps_model_PolygonOptions> ascom_amap_api_maps_model_PolygonOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_PolygonOptions', {'refId': refId});
    return com_amap_api_maps_model_PolygonOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_WeightedLatLng> ascom_amap_api_maps_model_WeightedLatLng() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_WeightedLatLng', {'refId': refId});
    return com_amap_api_maps_model_WeightedLatLng()..refId = result;
  }
  
  Future<com_amap_api_maps_model_MyLocationStyleCreator> ascom_amap_api_maps_model_MyLocationStyleCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_MyLocationStyleCreator', {'refId': refId});
    return com_amap_api_maps_model_MyLocationStyleCreator()..refId = result;
  }
  
  Future<com_amap_api_maps_model_MarkerOptionsCreator> ascom_amap_api_maps_model_MarkerOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_MarkerOptionsCreator', {'refId': refId});
    return com_amap_api_maps_model_MarkerOptionsCreator()..refId = result;
  }
  
  Future<com_amap_api_maps_model_MultiPointItem> ascom_amap_api_maps_model_MultiPointItem() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_MultiPointItem', {'refId': refId});
    return com_amap_api_maps_model_MultiPointItem()..refId = result;
  }
  
  Future<com_amap_api_maps_model_LatLngBoundsCreator> ascom_amap_api_maps_model_LatLngBoundsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_LatLngBoundsCreator', {'refId': refId});
    return com_amap_api_maps_model_LatLngBoundsCreator()..refId = result;
  }
  
  Future<com_amap_api_maps_model_ArcOptions> ascom_amap_api_maps_model_ArcOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_ArcOptions', {'refId': refId});
    return com_amap_api_maps_model_ArcOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_BitmapDescriptorCreator> ascom_amap_api_maps_model_BitmapDescriptorCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_BitmapDescriptorCreator', {'refId': refId});
    return com_amap_api_maps_model_BitmapDescriptorCreator()..refId = result;
  }
  
  Future<com_amap_api_maps_model_CircleOptions> ascom_amap_api_maps_model_CircleOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_CircleOptions', {'refId': refId});
    return com_amap_api_maps_model_CircleOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_NavigateArrowOptionsCreator> ascom_amap_api_maps_model_NavigateArrowOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_NavigateArrowOptionsCreator', {'refId': refId});
    return com_amap_api_maps_model_NavigateArrowOptionsCreator()..refId = result;
  }
  
  Future<com_amap_api_maps_model_RuntimeRemoteException> ascom_amap_api_maps_model_RuntimeRemoteException() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_RuntimeRemoteException', {'refId': refId});
    return com_amap_api_maps_model_RuntimeRemoteException()..refId = result;
  }
  
  Future<com_amap_api_maps_model_AMapGLOverlay> ascom_amap_api_maps_model_AMapGLOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_AMapGLOverlay', {'refId': refId});
    return com_amap_api_maps_model_AMapGLOverlay()..refId = result;
  }
  
  Future<com_amap_api_maps_model_HeatmapTileProvider_Builder> ascom_amap_api_maps_model_HeatmapTileProvider_Builder() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_HeatmapTileProvider_Builder', {'refId': refId});
    return com_amap_api_maps_model_HeatmapTileProvider_Builder()..refId = result;
  }
  
  Future<com_amap_api_maps_model_MultiPointOverlay> ascom_amap_api_maps_model_MultiPointOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_MultiPointOverlay', {'refId': refId});
    return com_amap_api_maps_model_MultiPointOverlay()..refId = result;
  }
  
  Future<com_amap_api_maps_model_BaseOptions> ascom_amap_api_maps_model_BaseOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_BaseOptions', {'refId': refId});
    return com_amap_api_maps_model_BaseOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_PolylineOptionsCreator> ascom_amap_api_maps_model_PolylineOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_PolylineOptionsCreator', {'refId': refId});
    return com_amap_api_maps_model_PolylineOptionsCreator()..refId = result;
  }
  
  Future<com_amap_api_maps_model_BaseOverlay> ascom_amap_api_maps_model_BaseOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_BaseOverlay', {'refId': refId});
    return com_amap_api_maps_model_BaseOverlay()..refId = result;
  }
  
  Future<com_amap_api_maps_model_Marker> ascom_amap_api_maps_model_Marker() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_Marker', {'refId': refId});
    return com_amap_api_maps_model_Marker()..refId = result;
  }
  
  Future<com_amap_api_maps_model_TileOverlayOptions> ascom_amap_api_maps_model_TileOverlayOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_TileOverlayOptions', {'refId': refId});
    return com_amap_api_maps_model_TileOverlayOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_RoutePara> ascom_amap_api_maps_model_RoutePara() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_RoutePara', {'refId': refId});
    return com_amap_api_maps_model_RoutePara()..refId = result;
  }
  
  Future<com_amap_api_maps_model_ArcOptionsCreator> ascom_amap_api_maps_model_ArcOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_ArcOptionsCreator', {'refId': refId});
    return com_amap_api_maps_model_ArcOptionsCreator()..refId = result;
  }
  
  Future<com_amap_api_maps_model_CameraPositionCreator> ascom_amap_api_maps_model_CameraPositionCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_CameraPositionCreator', {'refId': refId});
    return com_amap_api_maps_model_CameraPositionCreator()..refId = result;
  }
  
  Future<com_amap_api_maps_model_CrossOverlay> ascom_amap_api_maps_model_CrossOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_CrossOverlay', {'refId': refId});
    return com_amap_api_maps_model_CrossOverlay()..refId = result;
  }
  
  Future<com_amap_api_maps_model_particle_ParticleOverLifeModule> ascom_amap_api_maps_model_particle_ParticleOverLifeModule() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_ParticleOverLifeModule', {'refId': refId});
    return com_amap_api_maps_model_particle_ParticleOverLifeModule()..refId = result;
  }
  
  Future<com_amap_api_maps_model_particle_ConstantRotationOverLife> ascom_amap_api_maps_model_particle_ConstantRotationOverLife() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_ConstantRotationOverLife', {'refId': refId});
    return com_amap_api_maps_model_particle_ConstantRotationOverLife()..refId = result;
  }
  
  Future<com_amap_api_maps_model_particle_SinglePointParticleShape> ascom_amap_api_maps_model_particle_SinglePointParticleShape() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_SinglePointParticleShape', {'refId': refId});
    return com_amap_api_maps_model_particle_SinglePointParticleShape()..refId = result;
  }
  
  Future<com_amap_api_maps_model_particle_RandomVelocityBetweenTwoConstants> ascom_amap_api_maps_model_particle_RandomVelocityBetweenTwoConstants() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_RandomVelocityBetweenTwoConstants', {'refId': refId});
    return com_amap_api_maps_model_particle_RandomVelocityBetweenTwoConstants()..refId = result;
  }
  
  Future<com_amap_api_maps_model_particle_CurveSizeOverLife> ascom_amap_api_maps_model_particle_CurveSizeOverLife() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_CurveSizeOverLife', {'refId': refId});
    return com_amap_api_maps_model_particle_CurveSizeOverLife()..refId = result;
  }
  
  Future<com_amap_api_maps_model_particle_ParticleEmissionModule> ascom_amap_api_maps_model_particle_ParticleEmissionModule() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_ParticleEmissionModule', {'refId': refId});
    return com_amap_api_maps_model_particle_ParticleEmissionModule()..refId = result;
  }
  
  Future<com_amap_api_maps_model_particle_SizeOverLife> ascom_amap_api_maps_model_particle_SizeOverLife() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_SizeOverLife', {'refId': refId});
    return com_amap_api_maps_model_particle_SizeOverLife()..refId = result;
  }
  
  Future<com_amap_api_maps_model_particle_RectParticleShape> ascom_amap_api_maps_model_particle_RectParticleShape() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_RectParticleShape', {'refId': refId});
    return com_amap_api_maps_model_particle_RectParticleShape()..refId = result;
  }
  
  Future<com_amap_api_maps_model_particle_ColorGenerate> ascom_amap_api_maps_model_particle_ColorGenerate() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_ColorGenerate', {'refId': refId});
    return com_amap_api_maps_model_particle_ColorGenerate()..refId = result;
  }
  
  Future<com_amap_api_maps_model_particle_VelocityGenerate> ascom_amap_api_maps_model_particle_VelocityGenerate() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_VelocityGenerate', {'refId': refId});
    return com_amap_api_maps_model_particle_VelocityGenerate()..refId = result;
  }
  
  Future<com_amap_api_maps_model_particle_RotationOverLife> ascom_amap_api_maps_model_particle_RotationOverLife() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_RotationOverLife', {'refId': refId});
    return com_amap_api_maps_model_particle_RotationOverLife()..refId = result;
  }
  
  Future<com_amap_api_maps_model_particle_RandomColorBetWeenTwoConstants> ascom_amap_api_maps_model_particle_RandomColorBetWeenTwoConstants() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_RandomColorBetWeenTwoConstants', {'refId': refId});
    return com_amap_api_maps_model_particle_RandomColorBetWeenTwoConstants()..refId = result;
  }
  
  Future<com_amap_api_maps_model_particle_ParticleShapeModule> ascom_amap_api_maps_model_particle_ParticleShapeModule() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_ParticleShapeModule', {'refId': refId});
    return com_amap_api_maps_model_particle_ParticleShapeModule()..refId = result;
  }
  
  Future<com_amap_api_maps_model_particle_ParticleOverlayOptionsFactory> ascom_amap_api_maps_model_particle_ParticleOverlayOptionsFactory() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_ParticleOverlayOptionsFactory', {'refId': refId});
    return com_amap_api_maps_model_particle_ParticleOverlayOptionsFactory()..refId = result;
  }
  
  Future<com_amap_api_maps_model_particle_ParticleOverlayOptions> ascom_amap_api_maps_model_particle_ParticleOverlayOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_ParticleOverlayOptions', {'refId': refId});
    return com_amap_api_maps_model_particle_ParticleOverlayOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_particle_ParticleOverlay> ascom_amap_api_maps_model_particle_ParticleOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_particle_ParticleOverlay', {'refId': refId});
    return com_amap_api_maps_model_particle_ParticleOverlay()..refId = result;
  }
  
  Future<com_amap_api_maps_model_BaseHoleOptions> ascom_amap_api_maps_model_BaseHoleOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_BaseHoleOptions', {'refId': refId});
    return com_amap_api_maps_model_BaseHoleOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_TextOptions> ascom_amap_api_maps_model_TextOptions() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_TextOptions', {'refId': refId});
    return com_amap_api_maps_model_TextOptions()..refId = result;
  }
  
  Future<com_amap_api_maps_model_TileOverlay> ascom_amap_api_maps_model_TileOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_TileOverlay', {'refId': refId});
    return com_amap_api_maps_model_TileOverlay()..refId = result;
  }
  
  Future<com_amap_api_maps_model_PolygonOptionsCreator> ascom_amap_api_maps_model_PolygonOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_PolygonOptionsCreator', {'refId': refId});
    return com_amap_api_maps_model_PolygonOptionsCreator()..refId = result;
  }
  
  Future<com_amap_api_maps_model_TileProjectionCreator> ascom_amap_api_maps_model_TileProjectionCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_TileProjectionCreator', {'refId': refId});
    return com_amap_api_maps_model_TileProjectionCreator()..refId = result;
  }
  
  Future<com_amap_api_maps_model_GroundOverlayOptionsCreator> ascom_amap_api_maps_model_GroundOverlayOptionsCreator() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_GroundOverlayOptionsCreator', {'refId': refId});
    return com_amap_api_maps_model_GroundOverlayOptionsCreator()..refId = result;
  }
  
  Future<com_amap_api_maps_model_IndoorBuildingInfo> ascom_amap_api_maps_model_IndoorBuildingInfo() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_IndoorBuildingInfo', {'refId': refId});
    return com_amap_api_maps_model_IndoorBuildingInfo()..refId = result;
  }
  
  Future<com_amap_api_maps_model_Polyline> ascom_amap_api_maps_model_Polyline() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_Polyline', {'refId': refId});
    return com_amap_api_maps_model_Polyline()..refId = result;
  }
  
  Future<com_amap_api_maps_model_BuildingOverlay> ascom_amap_api_maps_model_BuildingOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_model_BuildingOverlay', {'refId': refId});
    return com_amap_api_maps_model_BuildingOverlay()..refId = result;
  }
  
  Future<com_amap_api_maps_TextureMapView> ascom_amap_api_maps_TextureMapView() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_TextureMapView', {'refId': refId});
    return com_amap_api_maps_TextureMapView()..refId = result;
  }
  
  Future<com_amap_api_maps_AMapUtils> ascom_amap_api_maps_AMapUtils() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_AMapUtils', {'refId': refId});
    return com_amap_api_maps_AMapUtils()..refId = result;
  }
  
  Future<com_amap_api_maps_InfoWindowAnimationManager> ascom_amap_api_maps_InfoWindowAnimationManager() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_InfoWindowAnimationManager', {'refId': refId});
    return com_amap_api_maps_InfoWindowAnimationManager()..refId = result;
  }
  
  Future<com_amap_api_maps_WearMapView> ascom_amap_api_maps_WearMapView() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_WearMapView', {'refId': refId});
    return com_amap_api_maps_WearMapView()..refId = result;
  }
  
  Future<com_amap_api_maps_AMap> ascom_amap_api_maps_AMap() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_AMap', {'refId': refId});
    return com_amap_api_maps_AMap()..refId = result;
  }
  
  Future<com_amap_api_maps_MapView> ascom_amap_api_maps_MapView() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_maps_MapView', {'refId': refId});
    return com_amap_api_maps_MapView()..refId = result;
  }
  
  Future<com_amap_api_trace_TraceLocation> ascom_amap_api_trace_TraceLocation() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_trace_TraceLocation', {'refId': refId});
    return com_amap_api_trace_TraceLocation()..refId = result;
  }
  
  Future<com_amap_api_trace_LBSTraceClient> ascom_amap_api_trace_LBSTraceClient() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_trace_LBSTraceClient', {'refId': refId});
    return com_amap_api_trace_LBSTraceClient()..refId = result;
  }
  
  Future<com_amap_api_trace_TraceOverlay> ascom_amap_api_trace_TraceOverlay() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_trace_TraceOverlay', {'refId': refId});
    return com_amap_api_trace_TraceOverlay()..refId = result;
  }
  
  Future<com_amap_api_mapcore_util_> ascom_amap_api_mapcore_util_() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('RefClass::ascom_amap_api_mapcore_util_', {'refId': refId});
    return com_amap_api_mapcore_util_()..refId = result;
  }
  
}