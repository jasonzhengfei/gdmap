// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:amap_map_fluttify/src/ios/ios.export.g.dart';
import 'package:amap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

mixin com_autonavi_amap_mapcore_interfaces_IMapFragmentDelegate on java_lang_Object {
  

  

  

  @mustCallSuper
  Future<void> onInflate(android_app_Activity var1, com_amap_api_maps_AMapOptions var2, android_os_Bundle var3) {
    kNativeObjectPool.add(var1);
    kNativeObjectPool.add(var2);
    kNativeObjectPool.add(var3);
  
    if (fluttifyLogEnabled) {
      debugPrint('onInflate::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> setContext(android_content_Context var1) {
    kNativeObjectPool.add(var1);
  
    if (fluttifyLogEnabled) {
      debugPrint('setContext::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> setOptions(com_amap_api_maps_AMapOptions var1) {
    kNativeObjectPool.add(var1);
  
    if (fluttifyLogEnabled) {
      debugPrint('setOptions::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> onCreate(android_os_Bundle var1) {
    kNativeObjectPool.add(var1);
  
    if (fluttifyLogEnabled) {
      debugPrint('onCreate::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> onResume() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('onResume::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> onPause() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('onPause::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> onDestroyView() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('onDestroyView::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> onDestroy() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('onDestroy::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> onLowMemory() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('onLowMemory::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> onSaveInstanceState(android_os_Bundle var1) {
    kNativeObjectPool.add(var1);
  
    if (fluttifyLogEnabled) {
      debugPrint('onSaveInstanceState::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<bool> isReady() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('isReady::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> setVisibility(int var1) {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('setVisibility::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
}