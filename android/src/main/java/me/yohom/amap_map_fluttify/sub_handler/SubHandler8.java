//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package me.yohom.amap_map_fluttify.sub_handler;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.platform.PlatformViewRegistry;

import me.yohom.amap_map_fluttify.AmapMapFluttifyPlugin.Handler;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class SubHandler8 {
    public static Map<String, Handler> getSubHandler(BinaryMessenger messenger) {
        return new HashMap<String, Handler>() {{
            // method
            put("com.amap.api.maps.UiSettings::setAllGesturesEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setAllGesturesEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setAllGesturesEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setLogoPosition", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setLogoPosition(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLogoPosition(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setZoomPosition", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setZoomPosition(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setZoomPosition(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::getZoomPosition", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::getZoomPosition(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getZoomPosition();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isScaleControlsEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isScaleControlsEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isScaleControlsEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isZoomControlsEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isZoomControlsEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isZoomControlsEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isCompassEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isCompassEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isCompassEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isMyLocationButtonEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isMyLocationButtonEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isMyLocationButtonEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isScrollGesturesEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isScrollGesturesEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isScrollGesturesEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isZoomGesturesEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isZoomGesturesEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isZoomGesturesEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isTiltGesturesEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isTiltGesturesEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isTiltGesturesEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isRotateGesturesEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isRotateGesturesEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isRotateGesturesEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::getLogoPosition", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::getLogoPosition(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getLogoPosition();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isIndoorSwitchEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isIndoorSwitchEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isIndoorSwitchEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setIndoorSwitchEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setIndoorSwitchEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setIndoorSwitchEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setLogoMarginRate", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                Double var2 = (Double) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setLogoMarginRate(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLogoMarginRate(var1, new Double(var2).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::getLogoMarginRate", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::getLogoMarginRate(" + var1 + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getLogoMarginRate(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setLogoLeftMargin", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setLogoLeftMargin(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLogoLeftMargin(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setLogoBottomMargin", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setLogoBottomMargin(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLogoBottomMargin(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setZoomInByScreenCenter", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setZoomInByScreenCenter(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setZoomInByScreenCenter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::setGestureScaleByMapCenter", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::setGestureScaleByMapCenter(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setGestureScaleByMapCenter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.UiSettings::isGestureScaleByMapCenter", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.UiSettings ref = (com.amap.api.maps.UiSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.UiSettings@" + refId + "::isGestureScaleByMapCenter(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isGestureScaleByMapCenter();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.SwipeDismissTouchListener::onTouch", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.view.View var1 = (android.view.View) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
                // ref arg
                android.view.MotionEvent var2 = (android.view.MotionEvent) getHEAP().get((int) ((Map<String, Object>) __args__).get("var2"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.SwipeDismissTouchListener ref = (com.amap.api.maps.SwipeDismissTouchListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.SwipeDismissTouchListener@" + refId + "::onTouch(" + var1 + var2 + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.onTouch(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowParams::setInfoWindowUpdateTime", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowParams ref = (com.amap.api.maps.InfoWindowParams) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowParams@" + refId + "::setInfoWindowUpdateTime(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowUpdateTime(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowParams::getInfoWindowUpdateTime", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowParams ref = (com.amap.api.maps.InfoWindowParams) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowParams@" + refId + "::getInfoWindowUpdateTime(" + "" + ")");
                }
            
                // invoke native method
                long __result__;
                try {
                    __result__ = ref.getInfoWindowUpdateTime();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowParams::setInfoWindowType", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowParams ref = (com.amap.api.maps.InfoWindowParams) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowParams@" + refId + "::setInfoWindowType(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowType(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowParams::getInfoWindowType", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowParams ref = (com.amap.api.maps.InfoWindowParams) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowParams@" + refId + "::getInfoWindowType(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getInfoWindowType();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowParams::getInfoWindow", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowParams ref = (com.amap.api.maps.InfoWindowParams) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowParams@" + refId + "::getInfoWindow(" + "" + ")");
                }
            
                // invoke native method
                android.view.View __result__;
                try {
                    __result__ = ref.getInfoWindow();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowParams::setInfoContent", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.view.View var1 = (android.view.View) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowParams ref = (com.amap.api.maps.InfoWindowParams) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowParams@" + refId + "::setInfoContent(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoContent(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowParams::setInfoWindow", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.view.View var1 = (android.view.View) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowParams ref = (com.amap.api.maps.InfoWindowParams) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowParams@" + refId + "::setInfoWindow(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindow(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowParams::getInfoContents", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowParams ref = (com.amap.api.maps.InfoWindowParams) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowParams@" + refId + "::getInfoContents(" + "" + ")");
                }
            
                // invoke native method
                android.view.View __result__;
                try {
                    __result__ = ref.getInfoContents();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::zoomIn", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::zoomIn(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.zoomIn();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::zoomOut", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::zoomOut(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.zoomOut();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::scrollBy", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var0 = (Double) ((Map<String, Object>) __args__).get("var0");
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::scrollBy(" + var0 + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.scrollBy(new Double(var0).floatValue(), new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::zoomTo", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var0 = (Double) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::zoomTo(" + var0 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.zoomTo(new Double(var0).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::zoomBy__double", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var0 = (Double) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::zoomBy(" + var0 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.zoomBy(new Double(var0).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::zoomBy__double__android_graphics_Point", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var0 = (Double) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                android.graphics.Point var1 = (android.graphics.Point) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::zoomBy(" + var0 + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.zoomBy(new Double(var0).floatValue(), var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::newCameraPosition", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.CameraPosition var0 = (com.amap.api.maps.model.CameraPosition) getHEAP().get((int) ((Map<String, Object>) __args__).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::newCameraPosition(" + var0 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.newCameraPosition(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::newLatLng", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLng var0 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) __args__).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::newLatLng(" + var0 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.newLatLng(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::newLatLngZoom", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLng var0 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) __args__).get("var0"));
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::newLatLngZoom(" + var0 + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.newLatLngZoom(var0, new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::newLatLngBounds__com_amap_api_maps_model_LatLngBounds__int", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLngBounds var0 = (com.amap.api.maps.model.LatLngBounds) getHEAP().get((int) ((Map<String, Object>) __args__).get("var0"));
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::newLatLngBounds(" + var0 + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.newLatLngBounds(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::changeLatLng", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLng var0 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) __args__).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::changeLatLng(" + var0 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.changeLatLng(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::changeBearing", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var0 = (Double) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::changeBearing(" + var0 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.changeBearing(new Double(var0).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::changeBearingGeoCenter", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var0 = (Double) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                com.autonavi.amap.mapcore.IPoint var1 = (com.autonavi.amap.mapcore.IPoint) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::changeBearingGeoCenter(" + var0 + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.changeBearingGeoCenter(new Double(var0).floatValue(), var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::changeTilt", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var0 = (Double) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::changeTilt(" + var0 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.changeTilt(new Double(var0).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::newLatLngBounds__com_amap_api_maps_model_LatLngBounds__int__int__int", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLngBounds var0 = (com.amap.api.maps.model.LatLngBounds) getHEAP().get((int) ((Map<String, Object>) __args__).get("var0"));
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::newLatLngBounds(" + var0 + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.newLatLngBounds(var0, var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CameraUpdateFactory::newLatLngBoundsRect", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLngBounds var0 = (com.amap.api.maps.model.LatLngBounds) getHEAP().get((int) ((Map<String, Object>) __args__).get("var0"));
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) __args__).get("var4");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CameraUpdateFactory::newLatLngBoundsRect(" + var0 + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CameraUpdate __result__;
                try {
                    __result__ = com.amap.api.maps.CameraUpdateFactory.newLatLngBoundsRect(var0, var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapException::getErrorMessage", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapException ref = (com.amap.api.maps.AMapException) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapException@" + refId + "::getErrorMessage(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getErrorMessage();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::logoPosition", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::logoPosition(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.logoPosition(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::zOrderOnTop", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::zOrderOnTop(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.zOrderOnTop(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::mapType", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::mapType(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.mapType(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::camera", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.CameraPosition var1 = (com.amap.api.maps.model.CameraPosition) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::camera(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.camera(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::scaleControlsEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::scaleControlsEnabled(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.scaleControlsEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::zoomControlsEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::zoomControlsEnabled(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.zoomControlsEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::compassEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::compassEnabled(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.compassEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::scrollGesturesEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::scrollGesturesEnabled(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.scrollGesturesEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::zoomGesturesEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::zoomGesturesEnabled(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.zoomGesturesEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::tiltGesturesEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::tiltGesturesEnabled(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.tiltGesturesEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::rotateGesturesEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::rotateGesturesEnabled(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMapOptions __result__;
                try {
                    __result__ = ref.rotateGesturesEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getLogoPosition", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getLogoPosition(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getLogoPosition();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getZOrderOnTop", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getZOrderOnTop(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.getZOrderOnTop();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getMapType", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getMapType(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getMapType();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getCamera", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getCamera(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.CameraPosition __result__;
                try {
                    __result__ = ref.getCamera();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getScaleControlsEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getScaleControlsEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.getScaleControlsEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getZoomControlsEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getZoomControlsEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.getZoomControlsEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getCompassEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getCompassEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.getCompassEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getScrollGesturesEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getScrollGesturesEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.getScrollGesturesEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getZoomGesturesEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getZoomGesturesEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.getZoomGesturesEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getTiltGesturesEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getTiltGesturesEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.getTiltGesturesEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapOptions::getRotateGesturesEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMapOptions ref = (com.amap.api.maps.AMapOptions) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapOptions@" + refId + "::getRotateGesturesEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.getRotateGesturesEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CoordinateConverter::from", (__args__, __methodResult__) -> {
                // args
                // enum arg
                com.amap.api.maps.CoordinateConverter.CoordType var1 = com.amap.api.maps.CoordinateConverter.CoordType.values()[(int) ((Map<String, Object>) __args__).get("var1")];
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.CoordinateConverter ref = (com.amap.api.maps.CoordinateConverter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CoordinateConverter@" + refId + "::from(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CoordinateConverter __result__;
                try {
                    __result__ = ref.from(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CoordinateConverter::coord", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLng var1 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.CoordinateConverter ref = (com.amap.api.maps.CoordinateConverter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CoordinateConverter@" + refId + "::coord(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.CoordinateConverter __result__;
                try {
                    __result__ = ref.coord(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CoordinateConverter::convert", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.CoordinateConverter ref = (com.amap.api.maps.CoordinateConverter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CoordinateConverter@" + refId + "::convert(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.LatLng __result__;
                try {
                    __result__ = ref.convert();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.CoordinateConverter::isAMapDataAvailable", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                double var0 = (double) ((Map<String, Object>) __args__).get("var0");
                // jsonable arg
                double var2 = (double) ((Map<String, Object>) __args__).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.CoordinateConverter::isAMapDataAvailable(" + var0 + var2 + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = com.amap.api.maps.CoordinateConverter.isAMapDataAvailable(var0, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap.InfoWindowAdapter::getInfoWindow", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.Marker var1 = (com.amap.api.maps.model.Marker) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap.InfoWindowAdapter ref = (com.amap.api.maps.AMap.InfoWindowAdapter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap.InfoWindowAdapter@" + refId + "::getInfoWindow(" + var1 + ")");
                }
            
                // invoke native method
                android.view.View __result__;
                try {
                    __result__ = ref.getInfoWindow(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap.InfoWindowAdapter::getInfoContents", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.Marker var1 = (com.amap.api.maps.model.Marker) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap.InfoWindowAdapter ref = (com.amap.api.maps.AMap.InfoWindowAdapter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap.InfoWindowAdapter@" + refId + "::getInfoContents(" + var1 + ")");
                }
            
                // invoke native method
                android.view.View __result__;
                try {
                    __result__ = ref.getInfoContents(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap.ImageInfoWindowAdapter::getInfoWindowUpdateTime", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap.ImageInfoWindowAdapter ref = (com.amap.api.maps.AMap.ImageInfoWindowAdapter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap.ImageInfoWindowAdapter@" + refId + "::getInfoWindowUpdateTime(" + "" + ")");
                }
            
                // invoke native method
                long __result__;
                try {
                    __result__ = ref.getInfoWindowUpdateTime();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::setPoints", (__args__, __methodResult__) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                java.util.List<com.amap.api.maps.model.LatLng> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    ((ArrayList<com.amap.api.maps.model.LatLng>) var1).add((com.amap.api.maps.model.LatLng) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::setPoints(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPoints((ArrayList) var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::resetIndex", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::resetIndex(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.resetIndex();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::setTotalDuration", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::setTotalDuration(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setTotalDuration(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::startSmoothMove", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::startSmoothMove(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.startSmoothMove();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::stopMove", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::stopMove(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.stopMove();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::getObject", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::getObject(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.BasePointOverlay __result__;
                try {
                    __result__ = ref.getObject();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::getPosition", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::getPosition(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.LatLng __result__;
                try {
                    __result__ = ref.getPosition();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::getIndex", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::getIndex(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getIndex();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::destroy", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::removeMarker", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::removeMarker(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.removeMarker();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::setPosition", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLng var1 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::setPosition(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPosition(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::setRotate", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::setRotate(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRotate(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::setVisible", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::setVisible(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setVisible(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.MovingPointOverlay::setMoveListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.MovingPointOverlay ref = (com.amap.api.maps.utils.overlay.MovingPointOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.MovingPointOverlay@" + refId + "::setMoveListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setMoveListener(new com.amap.api.maps.utils.overlay.MovingPointOverlay.MoveListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.utils.overlay.MovingPointOverlay::setMoveListener::Callback");
            
                    // call dart method
                    @Override
                    public void move(double var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: move(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        double argvar1 = var1;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.amap.api.maps.utils.overlay.MovingPointOverlay.MoveListener::move",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::setPoints", (__args__, __methodResult__) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                java.util.List<com.amap.api.maps.model.LatLng> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    ((ArrayList<com.amap.api.maps.model.LatLng>) var1).add((com.amap.api.maps.model.LatLng) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.SmoothMoveMarker@" + refId + "::setPoints(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPoints((ArrayList) var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::setTotalDuration", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.SmoothMoveMarker@" + refId + "::setTotalDuration(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setTotalDuration(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::startSmoothMove", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.SmoothMoveMarker@" + refId + "::startSmoothMove(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.startSmoothMove();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::stopMove", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.SmoothMoveMarker@" + refId + "::stopMove(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.stopMove();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::getMarker", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.SmoothMoveMarker@" + refId + "::getMarker(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.Marker __result__;
                try {
                    __result__ = ref.getMarker();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::getPosition", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.SmoothMoveMarker@" + refId + "::getPosition(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.LatLng __result__;
                try {
                    __result__ = ref.getPosition();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::getIndex", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.SmoothMoveMarker@" + refId + "::getIndex(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getIndex();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::resetIndex", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.SmoothMoveMarker@" + refId + "::resetIndex(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.resetIndex();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::destroy", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.SmoothMoveMarker@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::removeMarker", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.SmoothMoveMarker@" + refId + "::removeMarker(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.removeMarker();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::setPosition", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLng var1 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.SmoothMoveMarker@" + refId + "::setPosition(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPosition(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::setDescriptor", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.BitmapDescriptor var1 = (com.amap.api.maps.model.BitmapDescriptor) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.SmoothMoveMarker@" + refId + "::setDescriptor(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDescriptor(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::setRotate", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.SmoothMoveMarker@" + refId + "::setRotate(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRotate(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::setVisible", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.SmoothMoveMarker@" + refId + "::setVisible(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setVisible(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.utils.overlay.SmoothMoveMarker::setMoveListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.utils.overlay.SmoothMoveMarker ref = (com.amap.api.maps.utils.overlay.SmoothMoveMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.utils.overlay.SmoothMoveMarker@" + refId + "::setMoveListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setMoveListener(new com.amap.api.maps.utils.overlay.SmoothMoveMarker.MoveListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.utils.overlay.SmoothMoveMarker::setMoveListener::Callback");
            
                    // call dart method
                    @Override
                    public void move(double var1) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: move(" + var1 + ")");
                        }
            
                        // convert to jsonable data
                        // jsonable arg
                        double argvar1 = var1;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.amap.api.maps.utils.overlay.SmoothMoveMarker.MoveListener::move",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.SwipeDismissView::setCallback", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.SwipeDismissView ref = (com.amap.api.maps.SwipeDismissView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.SwipeDismissView@" + refId + "::setCallback(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setCallback(new com.amap.api.maps.WearMapView.OnDismissCallback() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.SwipeDismissView::setCallback::Callback");
            
                    // call dart method
                    @Override
                    public void onDismiss() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onDismiss(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.amap.api.maps.WearMapView.OnDismissCallback::onDismiss",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onNotifySwipe() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onNotifySwipe(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.amap.api.maps.WearMapView.OnDismissCallback::onNotifySwipe",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.MapsInitializer::initialize", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) __args__).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.MapsInitializer::initialize(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    com.amap.api.maps.MapsInitializer.initialize(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.MapsInitializer::setNetWorkEnable", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var0 = (boolean) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.MapsInitializer::setNetWorkEnable(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    com.amap.api.maps.MapsInitializer.setNetWorkEnable(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.MapsInitializer::getNetWorkEnable", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.MapsInitializer::getNetWorkEnable(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = com.amap.api.maps.MapsInitializer.getNetWorkEnable();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.MapsInitializer::setApiKey", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.MapsInitializer::setApiKey(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    com.amap.api.maps.MapsInitializer.setApiKey(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.MapsInitializer::getVersion", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.MapsInitializer::getVersion(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = com.amap.api.maps.MapsInitializer.getVersion();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.MapsInitializer::loadWorldGridMap", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var0 = (boolean) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.MapsInitializer::loadWorldGridMap(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    com.amap.api.maps.MapsInitializer.loadWorldGridMap(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.MapsInitializer::isLoadWorldGridMap", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.MapsInitializer::isLoadWorldGridMap(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = com.amap.api.maps.MapsInitializer.isLoadWorldGridMap();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.MapsInitializer::setBuildingHeight", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.MapsInitializer::setBuildingHeight(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    com.amap.api.maps.MapsInitializer.setBuildingHeight(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.MapsInitializer::setDownloadCoordinateConvertLibrary", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var0 = (boolean) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.MapsInitializer::setDownloadCoordinateConvertLibrary(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    com.amap.api.maps.MapsInitializer.setDownloadCoordinateConvertLibrary(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.MapsInitializer::isDownloadCoordinateConvertLibrary", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.MapsInitializer::isDownloadCoordinateConvertLibrary(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = com.amap.api.maps.MapsInitializer.isDownloadCoordinateConvertLibrary();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.MapsInitializer::setHost", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.MapsInitializer::setHost(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    com.amap.api.maps.MapsInitializer.setHost(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.MapsInitializer::setProtocol", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.MapsInitializer::setProtocol(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    com.amap.api.maps.MapsInitializer.setProtocol(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.MapsInitializer::getProtocol", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.MapsInitializer::getProtocol(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = com.amap.api.maps.MapsInitializer.getProtocol();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.MapsInitializer::closeTileOverlay", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var0 = (boolean) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.MapsInitializer::closeTileOverlay(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    com.amap.api.maps.MapsInitializer.closeTileOverlay(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.MapsInitializer::isTileOverlayClosed", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.MapsInitializer::isTileOverlayClosed(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = com.amap.api.maps.MapsInitializer.isTileOverlayClosed();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapProvince::getUrl", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapProvince ref = (com.amap.api.maps.offlinemap.OfflineMapProvince) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapProvince@" + refId + "::getUrl(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getUrl();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapProvince::setUrl", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapProvince ref = (com.amap.api.maps.offlinemap.OfflineMapProvince) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapProvince@" + refId + "::setUrl(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setUrl(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapProvince::getState", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapProvince ref = (com.amap.api.maps.offlinemap.OfflineMapProvince) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapProvince@" + refId + "::getState(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getState();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapProvince::setState", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapProvince ref = (com.amap.api.maps.offlinemap.OfflineMapProvince) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapProvince@" + refId + "::setState(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setState(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapProvince::getSize", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapProvince ref = (com.amap.api.maps.offlinemap.OfflineMapProvince) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapProvince@" + refId + "::getSize(" + "" + ")");
                }
            
                // invoke native method
                long __result__;
                try {
                    __result__ = ref.getSize();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapProvince::setSize", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                long var1 = (long) (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapProvince ref = (com.amap.api.maps.offlinemap.OfflineMapProvince) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapProvince@" + refId + "::setSize(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setSize(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapProvince::getVersion", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapProvince ref = (com.amap.api.maps.offlinemap.OfflineMapProvince) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapProvince@" + refId + "::getVersion(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getVersion();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapProvince::setVersion", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapProvince ref = (com.amap.api.maps.offlinemap.OfflineMapProvince) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapProvince@" + refId + "::setVersion(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setVersion(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapProvince::getcompleteCode", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapProvince ref = (com.amap.api.maps.offlinemap.OfflineMapProvince) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapProvince@" + refId + "::getcompleteCode(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getcompleteCode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapProvince::setCompleteCode", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapProvince ref = (com.amap.api.maps.offlinemap.OfflineMapProvince) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapProvince@" + refId + "::setCompleteCode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCompleteCode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapProvince::getCityList", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapProvince ref = (com.amap.api.maps.offlinemap.OfflineMapProvince) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapProvince@" + refId + "::getCityList(" + "" + ")");
                }
            
                // invoke native method
                java.util.ArrayList<com.amap.api.maps.offlinemap.OfflineMapCity> __result__;
                try {
                    __result__ = ref.getCityList();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.maps.offlinemap.OfflineMapCity item : __result__) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapProvince::getDownloadedCityList", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapProvince ref = (com.amap.api.maps.offlinemap.OfflineMapProvince) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapProvince@" + refId + "::getDownloadedCityList(" + "" + ")");
                }
            
                // invoke native method
                java.util.ArrayList<com.amap.api.maps.offlinemap.OfflineMapCity> __result__;
                try {
                    __result__ = ref.getDownloadedCityList();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.maps.offlinemap.OfflineMapCity item : __result__) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapProvince::setCityList", (__args__, __methodResult__) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                java.util.ArrayList<com.amap.api.maps.offlinemap.OfflineMapCity> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    ((ArrayList<com.amap.api.maps.offlinemap.OfflineMapCity>) var1).add((com.amap.api.maps.offlinemap.OfflineMapCity) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapProvince ref = (com.amap.api.maps.offlinemap.OfflineMapProvince) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapProvince@" + refId + "::setCityList(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCityList((ArrayList) var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.DownloadProgressView::setProgress", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.DownloadProgressView ref = (com.amap.api.maps.offlinemap.DownloadProgressView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.DownloadProgressView@" + refId + "::setProgress(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setProgress(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.Province::getProvinceName", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.Province ref = (com.amap.api.maps.offlinemap.Province) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.Province@" + refId + "::getProvinceName(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getProvinceName();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.Province::getJianpin", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.Province ref = (com.amap.api.maps.offlinemap.Province) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.Province@" + refId + "::getJianpin(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getJianpin();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.Province::getPinyin", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.Province ref = (com.amap.api.maps.offlinemap.Province) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.Province@" + refId + "::getPinyin(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getPinyin();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.Province::setProvinceName", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.Province ref = (com.amap.api.maps.offlinemap.Province) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.Province@" + refId + "::setProvinceName(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setProvinceName(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.Province::setJianpin", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.Province ref = (com.amap.api.maps.offlinemap.Province) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.Province@" + refId + "::setJianpin(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setJianpin(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.Province::setPinyin", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.Province ref = (com.amap.api.maps.offlinemap.Province) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.Province@" + refId + "::setPinyin(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPinyin(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.Province::setProvinceCode", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.Province ref = (com.amap.api.maps.offlinemap.Province) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.Province@" + refId + "::setProvinceCode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setProvinceCode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.Province::getProvinceCode", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.Province ref = (com.amap.api.maps.offlinemap.Province) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.Province@" + refId + "::getProvinceCode(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getProvinceCode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::downloadByCityCode", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::downloadByCityCode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.downloadByCityCode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::downloadByCityName", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::downloadByCityName(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.downloadByCityName(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::downloadByProvinceName", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::downloadByProvinceName(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.downloadByProvinceName(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::remove", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::remove(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.remove(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::getOfflineMapProvinceList", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::getOfflineMapProvinceList(" + "" + ")");
                }
            
                // invoke native method
                java.util.ArrayList<com.amap.api.maps.offlinemap.OfflineMapProvince> __result__;
                try {
                    __result__ = ref.getOfflineMapProvinceList();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.maps.offlinemap.OfflineMapProvince item : __result__) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::getItemByCityCode", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::getItemByCityCode(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.offlinemap.OfflineMapCity __result__;
                try {
                    __result__ = ref.getItemByCityCode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::getItemByCityName", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::getItemByCityName(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.offlinemap.OfflineMapCity __result__;
                try {
                    __result__ = ref.getItemByCityName(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::getItemByProvinceName", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::getItemByProvinceName(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.offlinemap.OfflineMapProvince __result__;
                try {
                    __result__ = ref.getItemByProvinceName(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::getOfflineMapCityList", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::getOfflineMapCityList(" + "" + ")");
                }
            
                // invoke native method
                java.util.ArrayList<com.amap.api.maps.offlinemap.OfflineMapCity> __result__;
                try {
                    __result__ = ref.getOfflineMapCityList();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.maps.offlinemap.OfflineMapCity item : __result__) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::getDownloadingCityList", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::getDownloadingCityList(" + "" + ")");
                }
            
                // invoke native method
                java.util.ArrayList<com.amap.api.maps.offlinemap.OfflineMapCity> __result__;
                try {
                    __result__ = ref.getDownloadingCityList();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.maps.offlinemap.OfflineMapCity item : __result__) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::getDownloadingProvinceList", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::getDownloadingProvinceList(" + "" + ")");
                }
            
                // invoke native method
                java.util.ArrayList<com.amap.api.maps.offlinemap.OfflineMapProvince> __result__;
                try {
                    __result__ = ref.getDownloadingProvinceList();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.maps.offlinemap.OfflineMapProvince item : __result__) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::getDownloadOfflineMapCityList", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::getDownloadOfflineMapCityList(" + "" + ")");
                }
            
                // invoke native method
                java.util.ArrayList<com.amap.api.maps.offlinemap.OfflineMapCity> __result__;
                try {
                    __result__ = ref.getDownloadOfflineMapCityList();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.maps.offlinemap.OfflineMapCity item : __result__) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::getDownloadOfflineMapProvinceList", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::getDownloadOfflineMapProvinceList(" + "" + ")");
                }
            
                // invoke native method
                java.util.ArrayList<com.amap.api.maps.offlinemap.OfflineMapProvince> __result__;
                try {
                    __result__ = ref.getDownloadOfflineMapProvinceList();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.maps.offlinemap.OfflineMapProvince item : __result__) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::updateOfflineCityByCode", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::updateOfflineCityByCode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.updateOfflineCityByCode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::updateOfflineCityByName", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::updateOfflineCityByName(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.updateOfflineCityByName(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::updateOfflineMapProvinceByName", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::updateOfflineMapProvinceByName(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.updateOfflineMapProvinceByName(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::restart", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::restart(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.restart();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::stop", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::stop(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.stop();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::pause", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::pause(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.pause();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::destroy", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapManager::setOnOfflineLoadedListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapManager ref = (com.amap.api.maps.offlinemap.OfflineMapManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapManager@" + refId + "::setOnOfflineLoadedListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnOfflineLoadedListener(new com.amap.api.maps.offlinemap.OfflineMapManager.OfflineLoadedListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.offlinemap.OfflineMapManager::setOnOfflineLoadedListener::Callback");
            
                    // call dart method
                    @Override
                    public void onVerifyComplete() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onVerifyComplete(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.amap.api.maps.offlinemap.OfflineMapManager.OfflineLoadedListener::onVerifyComplete",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapCity::getUrl", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapCity ref = (com.amap.api.maps.offlinemap.OfflineMapCity) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapCity@" + refId + "::getUrl(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getUrl();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapCity::setUrl", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapCity ref = (com.amap.api.maps.offlinemap.OfflineMapCity) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapCity@" + refId + "::setUrl(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setUrl(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapCity::getSize", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapCity ref = (com.amap.api.maps.offlinemap.OfflineMapCity) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapCity@" + refId + "::getSize(" + "" + ")");
                }
            
                // invoke native method
                long __result__;
                try {
                    __result__ = ref.getSize();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapCity::setSize", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                long var1 = (long) (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapCity ref = (com.amap.api.maps.offlinemap.OfflineMapCity) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapCity@" + refId + "::setSize(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setSize(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapCity::getState", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapCity ref = (com.amap.api.maps.offlinemap.OfflineMapCity) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapCity@" + refId + "::getState(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getState();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapCity::setState", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapCity ref = (com.amap.api.maps.offlinemap.OfflineMapCity) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapCity@" + refId + "::setState(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setState(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapCity::getVersion", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapCity ref = (com.amap.api.maps.offlinemap.OfflineMapCity) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapCity@" + refId + "::getVersion(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getVersion();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapCity::setVersion", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapCity ref = (com.amap.api.maps.offlinemap.OfflineMapCity) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapCity@" + refId + "::setVersion(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setVersion(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapCity::getcompleteCode", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapCity ref = (com.amap.api.maps.offlinemap.OfflineMapCity) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapCity@" + refId + "::getcompleteCode(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getcompleteCode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapCity::setCompleteCode", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapCity ref = (com.amap.api.maps.offlinemap.OfflineMapCity) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapCity@" + refId + "::setCompleteCode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCompleteCode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapActivity::showScr", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapActivity ref = (com.amap.api.maps.offlinemap.OfflineMapActivity) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapActivity@" + refId + "::showScr(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.showScr();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapActivity::closeScr", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapActivity ref = (com.amap.api.maps.offlinemap.OfflineMapActivity) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapActivity@" + refId + "::closeScr(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.closeScr();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapActivity::closeScr__android_os_Bundle", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapActivity ref = (com.amap.api.maps.offlinemap.OfflineMapActivity) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapActivity@" + refId + "::closeScr(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.closeScr(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.OfflineMapActivity::onClick", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.view.View var1 = (android.view.View) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.OfflineMapActivity ref = (com.amap.api.maps.offlinemap.OfflineMapActivity) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.OfflineMapActivity@" + refId + "::onClick(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onClick(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.City::setCity", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.City ref = (com.amap.api.maps.offlinemap.City) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.City@" + refId + "::setCity(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCity(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.City::getCity", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.City ref = (com.amap.api.maps.offlinemap.City) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.City@" + refId + "::getCity(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getCity();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.City::setCode", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.City ref = (com.amap.api.maps.offlinemap.City) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.City@" + refId + "::setCode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.City::getCode", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.City ref = (com.amap.api.maps.offlinemap.City) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.City@" + refId + "::getCode(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getCode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.City::getJianpin", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.City ref = (com.amap.api.maps.offlinemap.City) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.City@" + refId + "::getJianpin(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getJianpin();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.City::setJianpin", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.City ref = (com.amap.api.maps.offlinemap.City) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.City@" + refId + "::setJianpin(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setJianpin(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.City::getPinyin", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.City ref = (com.amap.api.maps.offlinemap.City) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.City@" + refId + "::getPinyin(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getPinyin();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.City::setPinyin", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.City ref = (com.amap.api.maps.offlinemap.City) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.City@" + refId + "::setPinyin(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPinyin(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.City::getAdcode", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.City ref = (com.amap.api.maps.offlinemap.City) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.City@" + refId + "::getAdcode(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getAdcode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.offlinemap.City::setAdcode", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.offlinemap.City ref = (com.amap.api.maps.offlinemap.City) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.offlinemap.City@" + refId + "::setAdcode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setAdcode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.Projection::fromScreenLocation", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.graphics.Point var1 = (android.graphics.Point) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.Projection ref = (com.amap.api.maps.Projection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.Projection@" + refId + "::fromScreenLocation(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.LatLng __result__;
                try {
                    __result__ = ref.fromScreenLocation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.Projection::toScreenLocation", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLng var1 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.Projection ref = (com.amap.api.maps.Projection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.Projection@" + refId + "::toScreenLocation(" + var1 + ")");
                }
            
                // invoke native method
                android.graphics.Point __result__;
                try {
                    __result__ = ref.toScreenLocation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.Projection::toMapLocation", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLng var1 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.Projection ref = (com.amap.api.maps.Projection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.Projection@" + refId + "::toMapLocation(" + var1 + ")");
                }
            
                // invoke native method
                android.graphics.PointF __result__;
                try {
                    __result__ = ref.toMapLocation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.Projection::toOpenGLLocation", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLng var1 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.Projection ref = (com.amap.api.maps.Projection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.Projection@" + refId + "::toOpenGLLocation(" + var1 + ")");
                }
            
                // invoke native method
                android.graphics.PointF __result__;
                try {
                    __result__ = ref.toOpenGLLocation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.Projection::toOpenGLWidth", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.Projection ref = (com.amap.api.maps.Projection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.Projection@" + refId + "::toOpenGLWidth(" + var1 + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.toOpenGLWidth(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.Projection::getVisibleRegion", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.Projection ref = (com.amap.api.maps.Projection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.Projection@" + refId + "::getVisibleRegion(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.VisibleRegion __result__;
                try {
                    __result__ = ref.getVisibleRegion();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.Projection::fromBoundsToTile", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLngBounds var1 = (com.amap.api.maps.model.LatLngBounds) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.Projection ref = (com.amap.api.maps.Projection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.Projection@" + refId + "::fromBoundsToTile(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.TileProjection __result__;
                try {
                    __result__ = ref.fromBoundsToTile(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.Projection::getMapBounds", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLng var1 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
                // jsonable arg
                Double var2 = (Double) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.Projection ref = (com.amap.api.maps.Projection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.Projection@" + refId + "::getMapBounds(" + var1 + var2 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.LatLngBounds __result__;
                try {
                    __result__ = ref.getMapBounds(var1, new Double(var2).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.Projection::getCameraInfo", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.Projection ref = (com.amap.api.maps.Projection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.Projection@" + refId + "::getCameraInfo(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.AMapCameraInfo __result__;
                try {
                    __result__ = ref.getCameraInfo();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap.MultiPositionInfoWindowAdapter::getInfoWindowClick", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.Marker var1 = (com.amap.api.maps.model.Marker) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap.MultiPositionInfoWindowAdapter ref = (com.amap.api.maps.AMap.MultiPositionInfoWindowAdapter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap.MultiPositionInfoWindowAdapter@" + refId + "::getInfoWindowClick(" + var1 + ")");
                }
            
                // invoke native method
                android.view.View __result__;
                try {
                    __result__ = ref.getInfoWindowClick(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap.MultiPositionInfoWindowAdapter::getOverturnInfoWindow", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.Marker var1 = (com.amap.api.maps.model.Marker) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap.MultiPositionInfoWindowAdapter ref = (com.amap.api.maps.AMap.MultiPositionInfoWindowAdapter) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap.MultiPositionInfoWindowAdapter@" + refId + "::getOverturnInfoWindow(" + var1 + ")");
                }
            
                // invoke native method
                android.view.View __result__;
                try {
                    __result__ = ref.getOverturnInfoWindow(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
        }};
    }
}
